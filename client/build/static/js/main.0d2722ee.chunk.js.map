{"version":3,"sources":["redux/reducers/userReducer.js","redux/reducers/productsReducer.js","redux/reducers/ordersReducer.js","redux/reducers/index.js","utils/setAuthToken.js","api/api.js","redux/sagas/userSaga.js","redux/sagas/productsSaga.js","redux/sagas/ordersSaga.js","redux/sagas/index.js","redux/actions/action.js","components/common/Header.js","components/PageNotFound.js","components/register/Register.js","components/login/Login.js","components/forgot/Forgot.js","components/news/News.js","components/common/Sidebar.js","components/changePassword/ChangePassword.js","components/PrivateRoute.js","components/changePassword/PasswordLess.js","components/verifyEmail/verifyEmail.js","components/common/Footer.js","components/products/products.js","components/dashboard/Dashboard.js","components/MainLayout/Main.js","components/orders/Orders.js","components/transactions.js/Transactions.js","components/customers/Customers.js","components/App.js","index.js"],"names":["isEmpty","require","userReducer","state","action","type","isAuthenticated","json","user","customersFound","customersData","isWalletLoaded","wallet","isWallet1Loaded","wallet1","loginError","error","productsReducer","productsFound","products","ordersReducer","ordersFound","orders","reducer","combineReducers","setAuthToken","token","axios","defaults","headers","common","userData","post","process","get","orderData","loginUser","getWallet1","getCustomers","loadWallet","logOutUser","actionLoginUser","API","then","res","data","localStorage","setItem","jwt_decode","catch","err","response","put","userId","removeItem","takeLatest","getProducts","actionProduct","getOrders","actionOrder","rootSaga","all","mapDispatchToProps","PageNotFound","connect","activeStyle","history","color","fontWeight","useEffect","Navbar","style","variant","bg","expand","to","exact","className","Toggle","aria-controls","Collapse","id","Nav","onClick","e","preventDefault","Swal","fire","title","text","icon","confirmButtonText","confirmButtonColor","denyButtonText","showDenyButton","value","isConfirmed","handleClick","Register","useState","name","email","password","confirmPassword","passwordLess","setUserData","errors","setErrors","isActive","setIsActive","handleChange","event","target","prevData","class","onSubmit","Object","keys","length","formIsValid","html","allowEscapeKey","allowOutsideClick","didOpen","showLoading","push","console","log","alreadyExists","isDenied","prevState","message","disabled","onChange","placeholder","checked","for","width","src","loginResponsePayload","handleLoginSuccess","handleLoginError","statusCode","loginAttemptResponse","uid","URLSearchParams","window","location","search","undefined","Error","decoded","currentTime","Date","now","exp","ForgotPassword","toast","getNews","article","newsReducer","news","map","item","userProfile","setType","tok","getItem","textAlign","href","includes","cursor","data-feather","jwtToken","Component","component","rest","render","props","ChangePassword","VerifyEmail","walletUpdated","productsData","productFound","viewProduct","product","status","quantity","keywords","keyword","index","image","description","currency","symbol","price","brand","showCloseButton","showCancelButton","focusConfirm","confirmButtonAriaLabel","cancelButtonText","cancelButtonAriaLabel","alert","swalWithBootstrapButtons","mixin","customClass","confirmButton","cancelButton","buttonsStyling","reverseButtons","result","insuffecientBalance","placeOrder","key","alt","height","contain","float","Dashboard","Main","ordersData","isLoaded","setisLoaded","emailVerified","userInfo","ord","_id","productDetails","order","adminId","orderId","refundOrder","wallet1Loaded","setWalletData","walletTableData","setWalletTableData","setBalance","currencies","setCurrencies","selectedCurrency","setSelectedCurrency","loadingData","setLoadingData","selectedUserId","setSelectedUserId","loadData","currencyId","api","tempTableData","prevBalance","credit","debit","entry","rowBalance","balance","active","spinner","margin","curr","marginLeft","preConfirm","document","getElementById","amount","addBalance","reverse","rowCredit","rowDebit","textDecoration","find","customers","customer","walletAddress","deleteUser","setCurrentUser","path","Login","Customers","Orders","Transactions","Products","PasswordLess","News","position","autoClose","hideProgressBar","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","logger","run"],"mappings":"oLAAMA,EAAUC,EAAQ,IAuCTC,EArCK,WAAyB,IAAxBC,EAAuB,uDAAf,GAAIC,EAAW,uCACxC,OAAQA,EAAOC,MACX,IAAK,mBACD,OAAO,2BACAF,GADP,IAEIG,iBAAkBN,EAAQI,EAAOG,MACjCC,KAAMJ,EAAOG,OAGjB,IAAK,gBACL,OAAO,2BACAJ,GADP,IAEIM,gBAAiBT,EAAQI,EAAOG,MAChCG,cAAeN,EAAOG,OAE9B,IAAK,aACD,OAAO,2BACAJ,GADP,IAEIQ,gBAAiBX,EAAQI,EAAOG,MAChCK,OAAQR,EAAOG,OAEnB,IAAK,cACL,OAAO,2BACAJ,GADP,IAEIU,iBAAkBb,EAAQI,EAAOG,MACjCO,QAASV,EAAOG,OAExB,IAAK,0BACD,OAAO,2BACAJ,GADP,IAEIY,WAAYX,EAAOY,MACnBR,KAAKJ,EAAOG,OAEpB,QACI,OAAOJ,ICpCbH,EAAUC,EAAQ,IAcTgB,EAZS,WAAyB,IAAxBd,EAAuB,uDAAf,GAAIC,EAAW,uCAC5C,OAAQA,EAAOC,MACX,IAAK,eACD,OAAO,2BACAF,GADP,IAEIe,eAAgBlB,EAAQI,EAAOG,MAC/BY,SAAUf,EAAOG,OAEzB,QACI,OAAOJ,ICXbH,EAAUC,EAAQ,IAcTmB,EAZO,WAAyB,IAAxBjB,EAAuB,uDAAf,GAAIC,EAAW,uCAC1C,OAAQA,EAAOC,MACX,IAAK,aACD,OAAO,2BACAF,GADP,IAEIkB,aAAcrB,EAAQI,EAAOG,MAC7Be,OAAQlB,EAAOG,OAEvB,QACI,OAAOJ,ICAJoB,EANCC,YAAgB,CAC5BtB,cACAe,kBACAG,kB,0CCIWK,EAVM,SAAAC,GACfA,EAEFC,IAAMC,SAASC,QAAQC,OAAvB,cAAiDJ,SAG1CC,IAAMC,SAASC,QAAQC,OAAvB,e,gBCNI,EACG,SAAUC,GACpB,OAAOJ,IAAMK,KAAKC,0CAAgDF,IAF3D,EAIA,SAAUA,GACjB,OAAOJ,IAAMK,KAAKC,uCAA6CF,IALxD,EAOQ,SAASA,GACxB,OAAOJ,IAAMK,KAAKC,mDAAwDF,IARnE,EAUF,SAASA,GACd,OAAOJ,IAAMK,KAAKC,wCAA6CF,IAXxD,EAaG,SAASA,GACnB,OAAOJ,IAAMO,IAAID,iDAdV,EAgBM,SAASF,GACtB,OAAOJ,IAAMK,KAAKC,gDAAqDF,IAjBhE,EAmBG,SAASA,GACnB,OAAOJ,IAAMK,KAAKC,6CAAkDF,IApB7D,EAsBW,SAASA,GAC3B,OAAOJ,IAAMK,KAAKC,uDAA4DF,IAvBvE,EAyBA,SAASA,GAChB,OAAOJ,IAAMK,KAAKC,4CAAiDF,IA1B5D,EA4BC,WACR,OAAOJ,IAAMO,IAAID,uCA7BV,EA+BA,SAASE,GAChB,OAAOR,IAAMK,KAAKC,yCAA8CE,IAhCzD,EAkCD,SAASJ,GACf,OAAOJ,IAAMK,KAAKC,kCAAuCF,IAnClD,EAqCC,SAASA,GACjB,OAAOJ,IAAMK,KAAKC,yCAA8CF,IAtCzD,EAwCE,SAASA,GAClB,OAAOJ,IAAMK,KAAKC,iCAAsCF,IAzCjD,EA2CD,SAASA,GACf,OAAOJ,IAAMK,KAAKC,2CAAgDF,IA5C3D,EA8CA,SAASA,GAChB,OAAOJ,IAAMK,KAAKC,wCAA6CF,IA/CxD,EAiDA,SAASA,GAChB,OAAOJ,IAAMK,KAAKC,4CAAiDF,I,WC/CjEK,G,WA0BAC,G,WAyBAC,G,WAwBAC,G,WAwBAC,I,WASeC,IA5GzB,SAAUL,EAAUL,GAApB,uEAEqB,OAFrB,kBAE2BW,EAAcX,EAASA,UACrCY,MAAK,SAAAC,GAAQ,IACFlB,EAAUkB,EAAIC,KAAdnB,MAIR,OAHAoB,aAAaC,QAAQ,WAAYrB,GACjCD,EAAaC,GACGsB,IAAWtB,MAG9BuB,OAAM,SAAAC,GACH,MAAMA,EAAIC,SAASN,QAXnC,OAaQ,OAXMtC,EAFd,gBAac6C,YAAI,CACN/C,KAAM,mBACNE,KAAMA,IAflB,8BAmBQ,OAnBR,mCAmBc6C,YAAI,CACN/C,KAAM,0BACNW,MAAK,OArBjB,qDA0BA,SAAUqB,EAAWN,GAArB,uEAEqB,OAFrB,kBAE2BW,EAAcX,EAASA,UACrCY,MAAK,SAAAC,GAGF,OAFgBA,EAAIC,QAIvBI,OAAM,SAAAC,GACH,MAAMA,EAAIC,SAASN,QATnC,OAWQ,OATMtC,EAFd,gBAWc6C,YAAI,CACN/C,KAAM,cACNE,KAAMA,IAblB,8BAiBQ,OAjBR,mCAiBc6C,YAAI,CACN/C,KAAM,0BACNW,MAAK,OAnBjB,qDAyBA,SAAUsB,EAAaP,GAAvB,uEAEqB,OAFrB,kBAE2BW,EAAiBX,EAASA,UACxCY,MAAK,SAAAC,GAGF,OAFgBA,EAAIC,QAIvBI,OAAM,SAAAC,GACH,MAAMA,EAAIC,SAASN,QATnC,OAWQ,OATMtC,EAFd,gBAWc6C,YAAI,CACN/C,KAAM,gBACNE,KAAMA,IAblB,8BAiBQ,OAjBR,mCAiBc6C,YAAI,CACN/C,KAAM,0BACNW,MAAK,OAnBjB,qDAwBA,SAAUuB,EAAWc,GAArB,uEAEqB,OAFrB,kBAE2BX,EAAeW,GAC7BV,MAAK,SAAAC,GAEF,OADgBA,EAAIC,QAGvBI,OAAM,SAAAC,GACH,MAAMA,EAAIC,SAASN,QARnC,OAUQ,OARMtC,EAFd,gBAUc6C,YAAI,CACN/C,KAAM,aACNE,KAAMA,IAZlB,8BAgBQ,OAhBR,mCAgBc6C,YAAI,CACN/C,KAAM,0BACNW,MAAK,OAlBjB,qDAwBA,SAAUwB,KAAV,iEAGI,OAFAM,aAAaQ,WAAW,YACxB7B,GAAa,GAFjB,SAGU2B,YAAI,CACN/C,KAAM,mBACNE,KAAM,KALd,uCASe,SAAUkC,KAAV,iEACX,OADW,SACLc,YAAW,aAAcnB,GADpB,OAEX,OAFW,SAELmB,YAAW,gBAAiBjB,GAFvB,OAGX,OAHW,SAGLiB,YAAW,cAAehB,GAHrB,OAIX,OAJW,SAILgB,YAAW,cAAelB,GAJrB,OAKX,OALW,UAKLkB,YAAW,cAAef,IALrB,wC,gBC7GLgB,I,YAoBeC,IApBzB,SAAUD,KAAV,uEAEqB,OAFrB,kBAE2Bd,IACdC,MAAK,SAAAC,GAAQ,OAAQA,KAErBK,OAAM,SAAAC,GACH,MAAMA,EAAIC,SAASN,QANnC,OAQQ,OANMtC,EAFd,gBAQc6C,YAAI,CACN/C,KAAM,eACNE,KAAMA,IAVlB,8BAcQ,OAdR,mCAcc6C,YAAI,CACN/C,KAAM,0BACNW,MAAK,OAhBjB,sDAoBe,SAAUyC,KAAV,iEACX,OADW,SACLF,YAAW,eAAgBC,IADtB,wC,gBCpBLE,I,YAoBeC,IApBzB,SAAUD,GAAU3B,GAApB,uEAEqB,OAFrB,kBAE2BW,EAAcX,EAASA,UACrCY,MAAK,SAAAC,GAAQ,OAAQA,KAErBK,OAAM,SAAAC,GACH,MAAMA,EAAIC,SAASN,QANnC,OAQQ,OANMtC,EAFd,gBAQc6C,YAAI,CACN/C,KAAM,aACNE,KAAMA,IAVlB,8BAcQ,OAdR,mCAcc6C,YAAI,CACN/C,KAAM,0BACNW,MAAK,OAhBjB,sDAoBe,SAAU2C,KAAV,iEACX,OADW,SACLJ,YAAW,aAAcG,IADpB,wC,gBCnBUE,IAAV,SAAUA,KAAV,iEACX,OADW,SACLC,YAAI,CACNpB,KACAgB,KACAE,OAJO,wC,aC4BFtB,GAAa,SAACN,GAAD,MAAe,CACrC1B,KAAK,cACL0B,aAuBSS,GAAa,iBAAO,CAC7BnC,KAAM,gB,uCCFV,IAAMyD,GAAqB,CACvBtB,WAAYA,ICtDDuB,ID8DAC,aALS,SAAC7D,GAAD,MAAY,CAChCK,KAAML,EAAMD,YAAYM,KACxBF,gBAAiBH,EAAMD,YAAYI,mBAGCwD,GAAzBE,EA5Df,YAIK,IAHDxB,EAGA,EAHAA,WACAlC,EAEA,EAFAA,gBAGM2D,GADN,EADAC,QAEoB,CAAEC,MAAO,QAAQC,WAAW,SAuBhD,OArBAC,qBAAU,cACP,CAAC/D,IAqBA,kBAACgE,GAAA,EAAD,CAAQC,MAAO,CAACJ,MAAM,SAAUK,QAAQ,OAAOC,GAAG,OAAQC,OAAO,MAC7D,kBAAC,IAAD,CAASC,GAAG,IAAIV,YAAaA,EAAaW,OAAK,EAACC,UAAU,gBAA1D,QACA,kBAACP,GAAA,EAAOQ,OAAR,CAAeC,gBAAc,qBAC7B,kBAACT,GAAA,EAAOU,SAAR,CAAiBC,GAAG,oBACd3E,EACE,kBAAC4E,GAAA,EAAD,CAAKL,UAAU,gCACV,kBAAC,IAAD,CAASF,GAAG,YAAYV,YAAaA,EAAaY,UAAU,YAA5D,YACD,kBAAC,IAAD,CAASF,GAAG,UAAUV,YAAaA,EAAaY,UAAU,YAA1D,UACA,kBAAC,IAAD,CAASF,GAAG,kBAAkBV,YAAaA,EAAaY,UAAU,YAAlE,oBACA,uBAAIA,UAAU,mBAAmBM,QAAS,SAACC,GAAD,OA5B9D,SAAsBA,GAClBA,EAAEC,iBACFC,KAAKC,KAAK,CACNC,MAAO,oBACPC,KAAM,sCACNC,KAAM,OACNC,kBAAmB,eACnBC,mBAAmB,UACnBC,eAAe,aACfC,gBAAe,IACdnD,MAAK,SAACoD,GACJA,EAAMC,aACLxD,OAgBuDyD,CAAYb,KAA3D,WAGA,kBAACF,GAAA,EAAD,CAAKL,UAAU,gCACX,kBAAC,IAAD,CAASF,GAAG,YAAYV,YAAaA,EAAaY,UAAU,YAA5D,YACA,kBAAC,IAAD,CAASF,GAAG,SAASV,YAAaA,EAAaY,UAAU,YAAzD,eC/CP,kBAAM,uD,iBCiPZqB,OA7Of,YAAgC,IAAZhC,EAAW,EAAXA,QAAW,EAEKiC,mBAAS,CAAEC,KAAM,GAAIC,MAAO,GAAIC,SAAU,GAAIC,gBAAiB,GAAGC,cAAa,IAFpF,oBAEpBzE,EAFoB,KAEV0E,EAFU,OAGCN,mBAAS,IAHV,oBAGpBO,EAHoB,KAGZC,EAHY,OAIIR,oBAAS,GAJb,oBAIpBS,EAJoB,KAIXC,EAJW,OAKgBV,oBAAS,GALzB,oBAO3B,SAASW,EAAaC,GAAQ,IAAD,EACDA,EAAMC,OAAtBZ,EADiB,EACjBA,KAAML,EADW,EACXA,MACdU,GAAY,SAAAQ,GAAQ,kCACbA,GADa,mBAEfb,EAAOL,OAEZY,GAAU,SAAAM,GAAQ,kCACXA,GADW,mBAEbb,EAAO,QA4FhB,OA3G2B,UA4GvB,yBAAKvB,UAAU,iBACP,yBAAKI,GAAG,QAEhB,yBAAKiC,MAAM,oCACP,yBAAKA,MAAM,mBACP,yBAAKjC,GAAG,YAAYJ,UAAU,IAE1B,wBAAIqC,MAAM,cAAV,YACA,uBAAGA,MAAM,sBAAT,wBAEA,0BAAMC,SAtFtB,SAAoBJ,GAEhBA,EAAM1B,iBAfV,WAAwB,IACZe,EAA2CrE,EAA3CqE,KAAMC,EAAqCtE,EAArCsE,MACRK,GAD6C3E,EAA9BuE,SAA8BvE,EAApBwE,gBAChB,IAQf,OANKH,IAAMM,EAAON,KAAO,sBACpBC,IAAOK,EAAOL,MAAQ,sBAI3BM,EAAUD,GAC4B,IAA/BU,OAAOC,KAAKX,GAAQY,OAMtBC,KACLjC,KAAKC,KAAK,CACNC,MAAO,sBACPgC,KAAM,uDACNC,gBAAgB,EAChBC,mBAAmB,EACnBC,QAAS,WACPrC,KAAKsC,iBAGXf,GAAY,GACZnE,EAAiBX,GACZY,MAAK,WACFkE,GAAY,GACZvB,KAAKC,KAAK,CACNC,MAAO,oBACPC,KAAM,iEACNC,KAAM,UACNC,kBAAmB,SACnBC,mBAAmB,YAEvB1B,EAAQ2D,KAAK,UACbpB,EAAY,CAAEL,KAAM,GAAIC,MAAO,GAAIC,SAAU,GAAIC,gBAAiB,QAErEtD,OAAM,SAACC,GACJ2D,GAAY,GACZiB,QAAQC,IAAI7E,EAAIC,SAASN,MACtBK,EAAIC,SAASN,KAAKmF,cAEjB1C,KAAKC,KAAK,CACNC,MAAO,aACPC,KAAM,0DACNC,KAAM,QACNC,kBAAmB,oBACnBC,mBAAmB,UACnBC,eAAe,oBACfC,gBAAe,IACdnD,MAAK,SAACoD,GACL+B,QAAQC,IAAIhC,GACXA,EAAMC,aACN9B,EAAQ2D,KAAK,UAEb9B,EAAMkC,UACLxB,GAAY,SAAAyB,GAAS,kCACdA,GADc,IAEjB7B,MAAO,WAMnBf,KAAKC,KAAK,CACNC,MAAO,cACPC,KAAMvC,EAAIC,SAASN,KAAKsF,QACxBzC,KAAM,QACNC,kBAAmB,KACnBC,mBAAmB,cA4BvB,yBAAKsB,MAAM,mDACH,2BAAO7G,KAAK,OAAQ+H,SAAUxB,EAAUb,MAAOhE,EAASqE,KAAMiC,SAAUvB,EAAcI,MAAM,+BAA+Bd,KAAK,OAAOkC,YAAY,cACnJ,yBAAKpB,MAAM,qBACP,uBAAGA,MAAM,mBAGhBR,EAAON,KAAO,yBAAKvB,UAAU,cAAc6B,EAAON,MAAc,KACjE,yBAAKc,MAAM,mDACP,2BAAO7G,KAAK,OAAQ+H,SAAUxB,EAAUb,MAAOhE,EAASsE,MAAOgC,SAAUvB,EAAcI,MAAM,+BAA+Bd,KAAK,QAAQkC,YAAY,kBACrJ,yBAAKpB,MAAM,qBACP,uBAAGA,MAAM,qBAGhBR,EAAOL,MAAQ,yBAAKxB,UAAU,cAAc6B,EAAOL,OAAe,KAEjEtE,EAASyE,aAeH,GAfkB,6BAAK,yBAAKU,MAAM,mDACtC,2BAAQkB,SAAUxB,EAAUb,MAAOhE,EAASuE,SAAU+B,SAAUvB,EAAczG,KAAK,WAAW6G,MAAM,+BAA+Bd,KAAK,WAAWkC,YAAY,aAC/J,yBAAKpB,MAAM,qBACP,uBAAGA,MAAM,wBAKjB,yBAAKA,MAAM,mDACP,2BAAQkB,SAAUxB,EAAUb,MAAOhE,EAASwE,gBAAiB8B,SAAUvB,EAAczG,KAAK,WAAW6G,MAAM,+BAA+Bd,KAAK,kBAAkBkC,YAAY,qBAC7K,yBAAKpB,MAAM,qBACP,uBAAGA,MAAM,yBAKjB,yBAAKA,MAAM,cACK,yBAAKA,MAAM,YACP,2BAAOmB,SAAW,kBAAM5B,GAAY,SAAAQ,GAAQ,kCACzEA,GADyE,IAE5ET,cAAezE,EAASyE,mBACvBJ,KAAK,eAAe/F,KAAK,WAAW4E,GAAG,YAAYiC,MAAM,mBAAoBqB,QAASxG,EAASyE,eAChE,2BAAOgC,IAAI,aAAX,2BAGpB,4BAAQJ,SAAUxB,EAAUvG,KAAK,SAAS6G,MAAM,mDAAhD,YAEJ,yBAAKA,MAAM,iCACP,uBAAGA,MAAM,iBAAT,6BAAmD,uBAAG/B,QAAS,kBAAKjB,EAAQ2D,KAAK,WAAWX,MAAM,qBAA/C,YAEnD,2BAAG,uBAAGA,MAAM,oBAAoB/B,QAAS,kBAAKjB,EAAQ2D,KAAK,aAAxD,sBAENjB,EAAY,gCAAQ,yBAAK/B,UAAU,mBAAf,IAAkC,yBAAK4D,MAAM,KAAKC,IAAI,gBAAtD,OAAwF,yBAAK7D,UAAU,0BCyJ1If,GAAqB,CACvB1B,UJ3RqB,SAACL,GAAD,MAAe,CACpC1B,KAAM,aACN0B,cIkSWiC,gBANS,SAAC7D,GAAD,MAAY,CAChCG,gBAAiBH,EAAMD,YAAYI,gBACnCqI,qBAAqBxI,EAAMD,YAAYM,KACvCO,WAAWZ,EAAMD,YAAYa,cAGO+C,GAAzBE,EAxUD,SAAC,GAMP,IALJE,EAKG,EALHA,QACA9B,EAIG,EAJHA,UACArB,EAGG,EAHHA,WACAT,EAEG,EAFHA,gBAEG,KADHqI,qBAEgCxC,mBAAS,CAAEE,MAAO,GAAIC,SAAU,GAAGE,cAAa,KAD7E,oBACIzE,EADJ,KACc0E,EADd,OAEyBN,mBAAS,IAFlC,oBAEIO,EAFJ,KAEYC,EAFZ,OAG4BR,oBAAS,GAHrC,oBAGIS,EAHJ,KAGaC,EAHb,KAqEH,SAASC,EAAaC,GAAQ,IAAD,EACDA,EAAMC,OAAtBZ,EADiB,EACjBA,KAAML,EADW,EACXA,MACdU,GAAY,SAAAQ,GAAQ,kCACbA,GADa,mBAEfb,EAAOL,OAEZY,GAAU,SAAAM,GAAQ,kCACXA,GADW,mBAEbb,EAAO,QAchB,SAASwC,IACL/B,GAAY,GACZvB,KAAKC,KAAK,CACNC,MAAO,aACPC,KAAM,qDACNC,KAAM,UACNC,kBAAmB,iBACnBC,mBAAmB,YAClBjD,MAAK,WACNuB,EAAQ2D,KAAK,gBA2BrB,SAASgB,IACLhC,GAAY,GAEgB,KAAzB9F,EAAW+H,WAEVxD,KAAKC,KAAK,CACNC,MAAO,uBACPC,KAAM1E,EAAWoH,QACjBzC,KAAM,UACNC,kBAAmB,eACnBC,mBAAmB,UACnBC,eAAe,QACfC,gBAAe,IACdnD,MAAK,SAACoD,GACFA,EAAMC,aArCnBtD,EAA0B,CAAC2D,MAAMtE,EAASsE,QACzC1D,MAAK,WACF2C,KAAKC,KAAK,CACNC,MAAO,gBACPC,KAAM,yDACNC,KAAM,OACNC,kBAAmB,qCACnBC,mBAAmB,YAClBjD,MAAK,WACNuB,EAAQ2D,KAAK,gBAGpB5E,OAAM,SAACjC,GACJsE,KAAKC,KAAK,CACNC,MAAO,yBACPC,KAAMzE,EAAMmH,QACZzC,KAAM,UACNC,kBAAmB,QACnBC,mBAAmB,kBA0BvBN,KAAKC,KAAK,CACNC,MAAO,iBACPC,KAAM1E,EAAWoH,QACjBzC,KAAM,QACNC,kBAAmB,mBACnBC,mBAAmB,QAI/B,SAASmD,IACFhI,GACA8H,IAECvI,GACAsI,IAqDR,OAlNAvE,qBAAU,WACN,IACM2E,EADQ,IAAIC,gBAAgBC,OAAOC,SAASC,QAChClH,IAAI,OACtB,GAAG8G,EACC,IACI,GAAiB,aAAPA,QAA4BK,UAANL,EAC5B,MAAM,IAAIM,MAAM,uBAEpB,IAAMC,EAAUvG,IAAWgG,GACrBQ,EAAcC,KAAKC,MAAQ,IAC7BH,EAAQI,IAAMH,EACdlE,KAAKC,KAAK,CACNC,MAAO,yBACPC,KAAM,oDACNC,KAAM,QACNC,kBAAmB,KACnBC,mBAAmB,QAClBjD,MAAK,WACLuB,EAAQ2D,KAAK,eAKlBvC,KAAKC,KAAK,CACNC,MAAO,gBACPgC,KAAM,iBACNC,gBAAgB,EAChBC,mBAAmB,EACnBC,QAAS,WACPrC,KAAKsC,iBAGXf,GAAY,GACZzE,EAAU,CAACoE,cAAa,EAAK9E,MAAMsH,IAEnCD,KAIR,MAAM/H,GACFsE,KAAKC,KAAK,CACNC,MAAO,yBACPC,KAAM,mEACNC,KAAM,QACNC,kBAAmB,KACnBC,mBAAmB,QAClBjD,MAAK,WACJuB,EAAQ2D,KAAK,iBAI7B,IACFxD,qBAAU,WAEF/D,GACDsI,MAGJ,CAACtI,EAAgB4D,IAErBG,qBAAU,WACR0E,MACA,CAAChI,IAqJE,yBAAK8D,UAAU,iBAEX,yBAAKI,GAAG,QAEpB,yBAAKiC,MAAM,oCACP,yBAAKA,MAAM,mBACP,yBAAKjC,GAAG,YAAYJ,UAAU,IAE1B,wBAAIqC,MAAM,cAAV,WACA,uBAAGA,MAAM,sBAAT,kCAEA,0BAAMC,SA3Dd,SAAoBJ,GAChBA,EAAM1B,iBAzFV,WAAwB,IACZgB,EAAiCtE,EAAjCsE,MAAOC,EAA0BvE,EAA1BuE,SAASE,EAAiBzE,EAAjByE,aAClBE,EAAS,GAMf,OAJKL,IAAOK,EAAOL,MAAQ,sBACtBC,GAAaE,IAAcE,EAAOJ,SAAW,yBAElDK,EAAUD,GAC4B,IAA/BU,OAAOC,KAAKX,GAAQY,OAkFtBC,KACFxF,EAASyE,cACRlB,KAAKC,KAAK,CACNC,MAAO,wBACPgC,KAAM,iBACNC,gBAAgB,EAChBC,mBAAmB,EACnBC,QAAS,WACPrC,KAAKsC,iBAIXlF,EAAsBX,GAAUY,MAAK,SAACQ,GAClCmC,KAAKC,KAAK,CACNC,MAAM,kBACNE,KAAK,eAGZzC,OAAM,SAACjC,GACJsE,KAAKC,KAAK,CACNC,MAAM,SACNgC,KAAKxG,EAAMmH,QACXzC,KAAK,eAOjBJ,KAAKC,KAAK,CACNC,MAAO,gBACPgC,KAAM,iBACNC,gBAAgB,EAChBC,mBAAmB,EACnBC,QAAS,WACPrC,KAAKsC,iBAGXf,GAAY,GACZzE,EAAUL,GAEVgH,QAiBQ,yBAAK7B,MAAM,mDACP,2BAAO7G,KAAK,OAAQ+H,SAAUxB,EAAUb,MAAOhE,EAASsE,MAAOgC,SAAUvB,EAAcI,MAAM,+BAA+Bd,KAAK,QAAQkC,YAAY,kBACrJ,yBAAKpB,MAAM,qBACP,uBAAGA,MAAM,mBAGhBR,EAAOL,MAAQ,yBAAKxB,UAAU,cAAc6B,EAAOL,OAAe,KAEjEtE,EAASyE,aAM0E,GAN1D,6BAAK,yBAAKU,MAAM,mDACvC,2BAAQkB,SAAUxB,EAAUb,MAAOhE,EAASuE,SAAU+B,SAAUvB,EAAczG,KAAK,WAAW6G,MAAM,+BAA+Bd,KAAK,WAAWkC,YAAY,aAC/J,yBAAKpB,MAAM,qBACP,uBAAGA,MAAM,wBAGhBR,EAAOJ,SAAW,yBAAKzB,UAAU,cAAc6B,EAAOJ,UAAkB,MAIzE,yBAAKY,MAAM,cACa,yBAAKA,MAAM,YACP,2BAAOmB,SAAW,kBAAM5B,GAAY,SAAAQ,GAAQ,kCACzEA,GADyE,IAE5ET,cAAezE,EAASyE,mBACvBJ,KAAK,eAAe/F,KAAK,WAAW4E,GAAG,YAAYiC,MAAM,mBAAoBqB,QAASxG,EAASyE,eAChE,2BAAOgC,IAAI,aAAX,0BAM5B,4BAAQJ,SAAUxB,EAAUvG,KAAK,SAAS6G,MAAM,mDAAhD,WAEJ,yBAAKA,MAAM,iCACP,uBAAGA,MAAM,iBAAT,0BAAgD,uBAAG/B,QAAS,kBAAKjB,EAAQ2D,KAAK,cAAcX,MAAM,qBAAlD,YAEhD,2BAAG,uBAAGA,MAAM,oBAAoB/B,QAAS,kBAAKjB,EAAQ2D,KAAK,aAAxD,sBAENjB,EAAY,gCAAQ,yBAAK/B,UAAU,mBAAf,IAAkC,yBAAK4D,MAAM,KAAKC,IAAI,gBAAtD,OAAwF,yBAAK7D,UAAU,4B,SCrIzH+E,OA3If,YAAsC,IAAZ1F,EAAW,EAAXA,QAAW,EACDiC,mBAAS,CAAEE,MAAO,KADjB,oBAC1BtE,EAD0B,KAChB0E,EADgB,OAELN,mBAAS,IAFJ,oBAE1BO,EAF0B,KAElBC,EAFkB,OAGFR,oBAAS,GAHP,oBAG1BS,EAH0B,KAGjBC,EAHiB,KAkFjC,OACI,yBAAKhC,UAAU,iBACH,yBAAKI,GAAG,QAEpB,yBAAKiC,MAAM,oCACP,yBAAKA,MAAM,mBACR,yBAAKjC,GAAG,YAAYJ,UAAU,IACjC,wBAAIqC,MAAM,cAAV,mBACA,uBAAGA,MAAM,sBAAT,8DAEA,0BAAMC,SAhEd,SAAoBJ,GAGhBA,EAAM1B,iBAfV,WAAwB,IAEdqB,EAAS,GAOf,OARmB3E,EAAVsE,QAIGK,EAAOL,MAAQ,sBAG3BM,EAAUD,GAC4B,IAA/BU,OAAOC,KAAKX,GAAQY,OAQtBC,KACLV,GAAY,GACZvB,KAAKC,KAAK,CACNC,MAAO,oBACPgC,KAAM,8CACNC,gBAAgB,EAChBC,mBAAmB,EACnBC,QAAS,WACPrC,KAAKsC,iBAGXlF,EAAWX,GACNY,MAAK,WACFkE,GAAY,GACZvB,KAAKC,KAAK,CACNC,MAAO,qBACPC,KAAM,qFACNC,KAAM,UACNC,kBAAmB,KACnBC,mBAAmB,YAClBjD,MAAK,WACN8D,EAAY,CAACJ,MAAO,KACpBnC,EAAQ2D,KAAK,gBAGpB5E,OAAM,SAACC,GACJ2D,GAAY,GACZiB,QAAQC,IAAI7E,EAAIC,SAASN,MACzBgH,KAAM7I,QACNsE,KAAKC,KAAK,CACNC,MAAO,oBACPC,KAAMvC,EAAIC,SAASN,KAAKsF,QACxBzC,KAAM,QACNC,kBAAmB,KACnBC,mBAAmB,cA0BvB,yBAAKsB,MAAM,mDACP,2BAAO7G,KAAK,QAASgI,SAzFrC,SAAsBtB,GAAQ,IAAD,EACDA,EAAMC,OAAtBZ,EADiB,EACjBA,KAAML,EADW,EACXA,MACdU,GAAY,SAAAQ,GAAQ,kCACbA,GADa,mBAEfb,EAAOL,OAEZY,GAAU,SAAAM,GAAQ,kCACXA,GADW,mBAEbb,EAAO,SAiF6CL,MAAOhE,EAASsE,MAAOD,KAAK,QAAQc,MAAM,+BAA+BoB,YAAY,UAClI,yBAAKpB,MAAM,qBACP,uBAAGA,MAAM,qBAGhBR,EAAOL,MAAQ,yBAAKxB,UAAU,cAAc6B,EAAOL,OAAe,KACnE,4BAAQ+B,SAAUxB,EAAUvG,KAAK,SAAS6G,MAAM,mDAAhD,oBAEJ,yBAAKA,MAAM,iCACP,uBAAGA,MAAM,iBAAT,2BAAiD,uBAAG/B,QAAS,kBAAKjB,EAAQ2D,KAAK,WAAWX,MAAM,qBAA/C,UAAjD,YCxFVpD,GAAqB,CACvBgG,QNtBmB,iBAAO,CAC1BzJ,KAAM,cM4BK2D,gBAJS,SAAC7D,GAAD,MAAY,CAChC4J,QAAS5J,EAAM6J,YAAYC,QAGSnG,GAAzBE,EAzBF,SAAC,GAA0B,IAAxB8F,EAAuB,EAAvBA,QAASC,EAAc,EAAdA,QACrB,OACI,6BACI,4BAAQ5E,QAAS2E,GAAjB,qBAIChC,QAAQC,IAAI,CAAEgC,YACbA,EACEA,EAAQG,KAAI,SAACC,GAAD,OACR,4BAAKA,EAAK3E,UAEb,2CCwHjB,IAAM1B,GAAqB,CACvBtB,WAAYA,IAUDwB,gBANS,SAAC7D,GAAD,MAAY,CAChCK,KAAML,EAAMD,YAAYM,KACxBF,gBAAiBH,EAAMD,YAAYI,gBACnC8J,YAAYjK,EAAMD,YAAYM,QAGMsD,GAAzBE,EA7If,YAMI,IALAxB,EAKD,EALCA,WAKD,KAJClC,gBAID,EAHC4D,QAGD,EAFC3B,WAED,EADC6H,YAEuBjE,mBAAS,aADjC,oBACQ9F,EADR,KACagK,EADb,KA4BD,OAzBEhG,qBAAU,WACN,IAAIiG,EAAMxH,aAAayH,QAAQ,YAEd,SADDvH,IAAWsH,GAChBjK,MACPgK,EAAQ,WAEd,IAoBF,6BACK,yBAAKpF,GAAG,UAAUJ,UAAU,UACzB,yBAAKA,UAAU,0BACvB,yBAAKA,UAAU,kBACX,yBAAKA,UAAU,kCACX,yBAAKA,UAAU,QACX,uBAAGN,MAAO,CAACiG,UAAU,WAArB,cAIJ,yBAAK3F,UAAU,WACX,uBAAG4F,KAAK,IAAI5F,UAAU,kCAAiC,uBAAGA,UAAU,0BAIhF,yBAAKA,UAAU,gBACX,wBAAIA,UAAU,QAGV,kBAAC,IAAD,CAASF,GAAG,aACZ,wBACIE,UAAS,uBAAkBqE,OAAOC,SAASsB,KAAKC,SAAS,YAAc,SAAW,KAElF,uBAAG7F,UAAU,gBACT,uBAAGA,UAAU,gBACb,iDAMR,kBAAC,IAAD,CAASF,GAAG,WACZ,wBACKE,UAAS,wBAAmBqE,OAAOC,SAASsB,KAAKC,SAAS,UAAY,SAAW,KAElF,uBAAG7F,UAAU,gBACT,uBAAGA,UAAU,2BACb,2CAMR,kBAAC,IAAD,CAASF,GAAG,WACZ,wBACKE,UAAS,wBAAmBqE,OAAOC,SAASsB,KAAKC,SAAS,UAAY,SAAW,KAClF,uBAAG7F,UAAU,gBACT,uBAAGA,UAAU,wBACb,2CAKX,SAARxE,EAAkB,kBAAC,IAAD,CAASsE,GAAG,cACnB,wBACKE,UAAS,wBAAmBqE,OAAOC,SAASsB,KAAKC,SAAS,aAAe,SAAW,KACrF,uBAAG7F,UAAU,gBACT,uBAAGA,UAAU,iBACb,8CAIG,GAEZ,6BAIC,kBAAC,IAAD,CAASF,GAAG,mBACZ,wBACKE,UAAS,wBAAmBqE,OAAOC,SAASsB,KAAKC,SAAS,cAAgB,SAAW,KACtF,uBAAI7F,UAAU,gBACV,uBAAGA,UAAU,iBACb,oDAKR,kBAAC,IAAD,CAASF,GAAG,iBACZ,wBACKE,UAAS,iBACV,uBAAGM,QAnGf,SAAsBC,GAClBA,EAAEC,iBACFC,KAAKC,KAAK,CACNC,MAAO,oBACPC,KAAM,sCACNC,KAAM,OACNC,kBAAmB,eACnBC,mBAAmB,UACnBC,eAAe,aACfC,gBAAe,IACdnD,MAAK,SAACoD,GACJA,EAAMC,aACLxD,QAuFyB+B,MAAO,CAACoG,OAAO,WAAY9F,UAAU,gBAC1D,uBAAGA,UAAU,gBACb,6CAMhB,4BAAQA,UAAU,yBAAwB,uBAAG+F,eAAa,aC4C9D,IAAM9G,GAAqB,CACvBtB,WAAYA,IAQDwB,gBALS,SAAC7D,GAAD,MAAY,CAChCK,KAAML,EAAMD,YAAYM,KACxBF,gBAAiBH,EAAMD,YAAYI,mBAGCwD,GAAzBE,EA7Kf,YAAiD,IAAvBE,EAAsB,EAAtBA,QAAS1B,EAAa,EAAbA,WAAa,EACZ2D,mBAAS,CAAEG,SAAU,GAAGC,gBAAgB,GAAGlD,OAAO,KADtC,oBACrCtB,EADqC,KAC3B0E,EAD2B,OAEhBN,mBAAS,IAFO,oBAErCO,EAFqC,KAE7BC,EAF6B,OAGbR,oBAAS,GAHI,oBAGrCS,EAHqC,KAG5BC,EAH4B,KAgB5C,SAASC,EAAaC,GAAQ,IAAD,EACDA,EAAMC,OAAtBZ,EADiB,EACjBA,KAAML,EADW,EACXA,MACdU,GAAY,SAAAQ,GAAQ,kCACbA,GADa,mBAEfb,EAAOL,OAEZY,GAAU,SAAAM,GAAQ,kCACXA,GADW,mBAEbb,EAAO,QAyDhB,OA5EA/B,qBAAU,WACN,GAAIvB,aAAa+H,SAAU,CACvB,IAAMnJ,EAAQoB,aAAa+H,SAErBtB,EAAUvG,IAAWtB,GAC3B+E,GAAY,SAAAyB,GAAS,kCACdA,GADc,IAEjB7E,OAAQkG,EAAQtE,WAG1B,IAmEE,oCACC,kBAAC,GAAD,MACD,yBAAKJ,UAAU,iBAEf,yBAAKI,GAAG,QAER,yBAAKiC,MAAM,oCACP,yBAAKA,MAAM,mBAAkB,6BACzB,yBAAKjC,GAAG,YAAYJ,UAAU,IAE1B,wBAAIqC,MAAM,cAAV,aACA,uBAAGA,MAAM,sBAAT,yBAEA,0BAAMC,SA1DtB,SAAoBJ,GAEhBA,EAAM1B,iBAZV,WAAwB,IACXiB,EAA6BvE,EAA7BuE,SAASC,EAAoBxE,EAApBwE,gBACZG,EAAS,GAKf,OAHKJ,IAAUI,EAAOJ,SAAW,yBAC5BC,IAAiBG,EAAOH,gBAAkB,iCAC/CI,EAAUD,GAC4B,IAA/BU,OAAOC,KAAKX,GAAQY,OAMtBC,KACLjC,KAAKC,KAAK,CACNC,MAAO,wBACPgC,KAAM,iBACNC,gBAAgB,EAChBC,mBAAmB,EACnBC,QAAS,WACPrC,KAAKsC,iBAGXf,GAAY,GACZnE,EAAmBX,GACdY,MAAK,SAACQ,GACH0D,GAAY,GACZvB,KAAKC,KAAK,CACNC,MAAO,qBACPC,KAAM,oEACNC,KAAM,UACNC,kBAAmB,KACnBC,mBAAmB,YAClBjD,MAAK,WACNH,IACAiE,EAAY,CAACH,SAAU,GAAGC,gBAAgB,KAC1CrC,EAAQ2D,KAAK,gBAGpB5E,OAAM,SAACC,GACJ2D,GAAY,GACZiB,QAAQC,IAAI7E,EAAIC,SAASN,MACzBgH,KAAM7I,QACNsE,KAAKC,KAAK,CACNC,MAAO,YACPC,KAAMvC,EAAIC,SAASN,KAAKsF,QACxBzC,KAAM,QACNC,kBAAmB,KACnBC,mBAAmB,cAqBf,yBAAKsB,MAAM,mDACP,2BAAO7G,KAAK,WAAY+H,SAAUxB,EAAUb,MAAOhE,EAASuE,SAAU+B,SAAUvB,EAAcI,MAAM,+BAA+Bd,KAAK,WAAWkC,YAAY,iBAC/J,yBAAKpB,MAAM,qBACX,uBAAGA,MAAM,wBAGZR,EAAOJ,SAAW,yBAAKzB,UAAU,cAAc6B,EAAOJ,UAAkB,KACzE,yBAAKY,MAAM,mDACP,2BAAO7G,KAAK,WAAW+H,SAAUxB,EAAUb,MAAOhE,EAASwE,gBAAiB8B,SAAUvB,EAAcI,MAAM,+BAA+Bd,KAAK,kBAAkBkC,YAAY,2BAC5K,yBAAKpB,MAAM,qBACP,uBAAGA,MAAM,wBAGhBR,EAAOJ,SAAW,yBAAKzB,UAAU,cAAc6B,EAAOH,iBAAyB,KAEhF,4BAAQ6B,SAAUxB,EAAUvG,KAAK,SAAS6G,MAAM,mDAAhD,6B,SChGTlD,gBAJS,SAAC7D,GAAD,MAAY,CAChCG,gBAAiBH,EAAMD,YAAYI,mBAGC,KAAzB0D,EArBM,SAAC,GAAD,IACN8G,EADM,EACjBC,UACAzK,EAFiB,EAEjBA,gBACG0K,EAHc,uDAKb,kBAAC,KAAD,iBACQA,EADR,CAEIC,OAAQ,SAAAC,GAAK,OACW,IAApB5K,EACI,kBAACwK,EAAcI,GAEX,kBAAC,KAAD,CAAUvG,GAAG,a,OC0HtBwG,OAlIf,YAAsC,IAAZjH,EAAW,EAAXA,QAAW,EACDiC,mBAAS,CAAEG,SAAU,GAAGC,gBAAgB,GAAGlD,OAAO,KADjD,oBAChBoD,GADgB,aAELN,mBAAS,IAFJ,iCAGFA,oBAAS,IAHP,iCAIJA,mBAAS,6BAJL,oBAmHjC,OAnHiC,UAMjC9B,qBAAU,WAEN,IACM2E,EADQ,IAAIC,gBAAgBC,OAAOC,SAASC,QAChClH,IAAI,OACtB,GAAG8G,EACC,IACI,GAAiB,aAAPA,QAA4BK,UAANL,EAC5B,MAAM,IAAIM,MAAM,iBAEpB,IAAMC,EAAUvG,IAAWgG,GACrBQ,EAAcC,KAAKC,MAAQ,IAC7BH,EAAQI,IAAMH,EACdlE,KAAKC,KAAK,CACNC,MAAO,yBACPC,KAAM,mEACNC,KAAM,QACNC,kBAAmB,KACnBC,mBAAmB,QAClBjD,MAAK,WACLuB,EAAQ2D,KAAK,cAKlBpB,GAAY,SAAAyB,GAAS,kCACdA,GADc,IAEjB7E,OAAQkG,EAAQtE,QAK5B,MAAMjE,GACFsE,KAAKC,KAAK,CACNC,MAAO,yBACPC,KAAM,mEACNC,KAAM,QACNC,kBAAmB,KACnBC,mBAAmB,QAClBjD,MAAK,WACJuB,EAAQ2D,KAAK,iBAI7B,IAmEE,yBAAKhD,UAAU,iBACf,gCACA,yBAAKA,UAAU,mBAAkB,yBAAK4D,MAAM,KAAKC,IAAI,gBAArD,MADA,KAC8E,yBAAK7D,UAAU,oBACvF,6BACF,+DACA,6BACA,gCC/DGuG,OA7Df,YAAmC,IAAZlH,EAAW,EAAXA,QAAW,EAECiC,oBAAS,GAFV,oBAEvBS,EAFuB,KAEdC,EAFc,KAkD9B,OA/CAxC,qBAAU,WAEN,IACM2E,EADQ,IAAIC,gBAAgBC,OAAOC,SAASC,QAChClH,IAAI,OACtB,GAAG8G,EACC,IACI,GAAiB,aAAPA,QAA4BK,UAANL,EAC5B,MAAM,IAAIM,MAAM,iBAEpB,IAAMC,EAAUvG,IAAWgG,GAC1BtG,EAAgB,CAACW,OAAOkG,EAAQtE,KAAKtC,MAAK,WACvCkE,GAAY,GACZvB,KAAKC,KAAK,CACNC,MAAO,mBACPC,KAAM,oDACNC,KAAM,UACNC,kBAAmB,QACnBC,mBAAmB,YAClBjD,MAAK,WACJuB,EAAQ2D,KAAK,gBAGrB5E,OAAM,SAACjC,GACLsE,KAAKC,KAAK,CACNC,MAAO,wBACPC,KAAMzE,EAAMmH,QACZzC,KAAM,QACNC,kBAAmB,KACnBC,mBAAmB,QAClBjD,MAAK,WACJuB,EAAQ2D,KAAK,gBAI3B,MAAM7G,GACFsE,KAAKC,KAAK,CACNC,MAAO,yBACPC,KAAM,yCACNC,KAAM,QACNC,kBAAmB,KACnBC,mBAAmB,QAClBjD,MAAK,WACJuB,EAAQ2D,KAAK,gBAI7B,IAEE,yBAAKhD,UAAU,iBACR+B,EAAY,yBAAK/B,UAAU,mBAAf,IAAkC,yBAAK4D,MAAM,KAAKC,IAAI,gBAAtD,MAA+E,yBAAK7D,UAAU,oBAC7G,6BACA,4BAAI,6DACJ,6BACA,+BCtBZ,IAAMf,GAAqB,CACvBvB,WZQsB,SAACR,GAAD,MAAe,CACrC1B,KAAM,cACN0B,cYDWiC,gBANS,SAAC7D,GAAD,MAAY,CAChCG,gBAAgBH,EAAMD,YAAYI,gBAClC8J,YAAYjK,EAAMD,YAAYM,KAC9B6K,cAAclL,EAAMD,YAAYS,kBAGGmD,GAAxBE,EA3Cf,YAWE,OAPC,EAHCoG,YAGD,EAFCiB,cAED,EADC/K,gBAEA+D,qBAAU,cAIR,IAGF,6BACK,iCACL,yBAAKQ,UAAU,OACH,yBAAKA,UAAU,UACX,yBAAKA,UAAU,QACX,yBAAKA,UAAU,eACX,wBAAIN,MAAO,CAACiG,UAAU,qBC8O5C1G,GAAqB,CACvBN,YbnQuB,iBAAO,CAC9BnD,KAAK,kBa0QM2D,gBANS,SAAC7D,GAAD,MAAY,CAChCmL,aAAanL,EAAMc,gBAAgBE,SACnCoK,aAAcpL,EAAMc,gBAAgBC,cACpCkJ,YAAYjK,EAAMD,YAAYM,QAGMsD,GAAzBE,EArQC,SAAC,GAMX,IALFR,EAKC,EALDA,YAEA8H,GAGC,EAJDpH,QAIC,EAHDoH,cACAC,EAEC,EAFDA,aAEC,KADDnB,YAEkCjE,mBAAS,CAAEC,KAAM,GAAIC,MAAO,GAAIC,SAAU,GAAIC,gBAAiB,MADhG,iCAE8BJ,mBAAS,KAFvC,iCAG8BA,oBAAS,IAHvC,8BA4FD,SAASqF,EAAYC,GACjB,IAAInB,EAAMxH,aAAayH,QAAQ,YAG3BmB,GAFY1I,IAAWsH,GAEbmB,EAAQE,SAAW,EAAI,iDAAkD,sDACnFC,EAAWH,EAAQG,SAAS1B,KAAI,SAAC2B,EAAQC,GACzC,MAAO,wCAAwCD,EAAQ,aAE3DvG,KAAKC,KAAK,CACNC,MAAO,mCACPgC,KAAK,mFAC4CiE,EAAQM,MADpD,4KAMkEN,EAAQjG,MAN1E,mFAQWiG,EAAQO,YARnB,gGAWcP,EAAQQ,SAAS,GAAGC,OAAO,IAAIT,EAAQU,MAXrD,oGAecV,EAAQW,MAftB,uGAqBYR,EArBZ,qGA4BYF,EA5BZ,+BAmCLW,iBAAiB,EACjB5D,MAAM,QACN6D,kBAAkB,EAClBC,cAAc,EACd5G,kBACE,UACF6G,uBAAwB,UACxBC,iBACE,SACFC,sBAAuB,WACtB/J,MAAK,SAACoD,GACFA,EAAMC,aA5InB,SAAoByF,GAChB,IAAInB,EAAMxH,aAAayH,QAAQ,YACxBhB,EAAUvG,IAAWsH,GAC5B,GAAiB,SAAdf,EAAQlJ,KAEP,OADAsM,MAAM,wCACC,GAGX,IAAMC,EAA2BtH,KAAKuH,MAAM,CACxCC,YAAa,CACXC,cAAe,kBACfC,aAAc,kBAEhBC,gBAAgB,IAGlBL,EAAyBrH,KAAK,CAC5BC,MAAO,oBACPC,KAAM,0CACNC,KAAM,OACN4G,kBAAkB,EAClB3G,kBAAmB,yBACnB8G,iBAAkB,gBAClBS,gBAAgB,IACfvK,MAAK,SAACwK,GACP,GAAIA,EAAOnH,YAAa,CAEpBV,KAAKC,KAAK,CACNC,MAAO,eACPgC,KAAM,yCACNC,gBAAgB,EAChBC,mBAAmB,EACnBC,QAAS,WACPrC,KAAKsC,iBAKX,IAAIzF,EAAU,CACVkB,OAAOkG,EAAQtE,GACfwG,QAAQA,GAKZ/I,EAAeP,GACdQ,MAAK,SAACQ,GAEAA,EAASiK,oBACRR,EAAyBrH,KACrB,YACD,8BACC,SAIJqH,EAAyBrH,KACrB,cACA,+CACA,cAKXtC,OAAM,SAACC,GACc,uCAAfA,EAAIiF,QACHyE,EAAyBrH,KACrB,YACH,+BACG,SAIJqH,EAAyBrH,KACrB,YACHrC,EAAIiF,QACD,gBAkEVkF,CAAW5B,MAKzB,OAvJApH,qBAAU,WACNb,MACF,IAqJM,oCAGR,kBAAC,GAAD,MAEA,yBAAKyB,GAAG,QACJ,4BAAQJ,UAAU,QACd,uBAAG4F,KAAK,IAAI5F,UAAU,gCAClB,uBAAGA,UAAU,yBAG7B,yBAAKA,UAAU,gBACf,6CAEA,6BACA,yBAAKA,UAAU,gBACX,6BAASA,UAAU,OACf,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,OAEd0G,EAAeD,EAAazI,KAAK1B,SAAS+I,KAAI,SAACuB,EAAQK,GAAT,OAC3C,yBAAKwB,IAAKxB,EAAOjH,UAAU,2BACvB,yBAAKqC,MAAM,QACP,yBAAKA,MAAM,gBACP,yBAAKA,MAAM,yBAAyBwB,IAAK+C,EAAQM,MAAOwB,IAAI,iBAAiBhJ,MAAO,CAACiJ,OAAQ,QAAQC,QAAQ,WAC7G,yBAAKvG,MAAM,aACP,wBAAIA,MAAM,cAAcuE,EAAQjG,OAChC,uBAAG0B,MAAM,aACRuE,EAAQO,aAET,uBAAG9E,MAAM,aAAT,YACS,0BAAMA,MAAM,oBAAZ,aAGT,6BACA,wBAAI3C,MAAO,CAACmJ,MAAM,QAASxG,MAAM,cAAcuE,EAAQQ,SAAS,GAAGC,OAAnE,IAA4ET,EAAQU,OAChF,4BAAQ5H,MAAO,CAACkE,MAAM,QAAQiF,MAAM,SACpCvI,QAAS,WAAKqG,EAAYC,IAC1BvE,MAAM,0BAAyB,gCAAK,uBAAGrC,UAAU,qBAAlB,cAC7B,oCAKtB,OAWhB,kBAAC,GAAD,WC5Ie8I,OApFf,WACE,OACE,yBAAK1I,GAAG,OACJ,kBAAC,GAAD,MAEA,yBAAKA,GAAG,QACR,4BAAQJ,UAAU,QACd,uBAAG4F,KAAK,IAAI5F,UAAU,gCAClB,uBAAGA,UAAU,yBAG7B,yBAAKA,UAAU,gBACf,0CAEA,yBAAKA,UAAU,gBACX,6BAASA,UAAU,OACf,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,2BACX,yBAAKA,UAAU,QACX,yBAAKA,UAAU,yBACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,YACX,yBAAKA,UAAU,qBACX,uBAAGA,UAAU,sBAGrB,yBAAKA,UAAU,YACX,wBAAIA,UAAU,4BAAd,kBACA,wBAAIA,UAAU,uBAAd,YAMpB,yBAAKA,UAAU,2BACX,yBAAKA,UAAU,QACX,yBAAKA,UAAU,yBACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,YACX,yBAAKA,UAAU,mBACX,uBAAGA,UAAU,yBAGrB,yBAAKA,UAAU,YACX,wBAAIA,UAAU,4BAAd,UACA,wBAAIA,UAAU,uBAAd,UAMpB,yBAAKA,UAAU,2BACX,yBAAKA,UAAU,QACX,yBAAKA,UAAU,yBACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,YACX,yBAAKA,UAAU,oBACX,uBAAGA,UAAU,0BAGrB,yBAAKA,UAAU,YACX,wBAAIA,UAAU,4BAAd,gBACA,wBAAIA,UAAU,uBAAd,iBCrDrB+I,ICkJT9J,GAAqB,CACvBJ,UhBlJqB,SAAC3B,GAAD,MAAe,CACpC1B,KAAK,aACL0B,cgB0JWiC,gBARS,SAAC7D,GAAD,MAAY,CAChC0N,WAAW1N,EAAMiB,cAAcE,OAC/BD,YAAYlB,EAAMiB,cAAcC,YAChC+I,YAAYjK,EAAMD,YAAYM,KAC9BF,gBAAgBH,EAAMD,YAAYI,mBAIEwD,GAAzBE,EA/JA,SAAC,GAOV,IAAD,EANDN,EAMC,EANDA,UAEAmK,GAIC,EALD3J,QAKC,EAJD2J,YACAxM,EAGC,EAHDA,YACA+I,EAEC,EAFDA,YACA9J,EACC,EADDA,gBACC,EACiC6F,mBAAS,CAAEC,KAAM,GAAIC,MAAO,GAAIC,SAAU,GAAIC,gBAAiB,KADhG,iCAE8BJ,mBAAS,KAFvC,iCAG8BA,oBAAS,IAHvC,oBAGM2H,EAHN,KAGeC,EAHf,KA2ED,OAvEA1J,qBAAU,WACP,GAAG/D,IAAoBwN,EAAS,CAE/B,IAAIxD,EAAMxH,aAAayH,QAAQ,YACzBhB,EAAUvG,IAAWsH,GAC3B,GAAGf,EAAQyE,cAAc,CACrB,IAAIC,EAAS,CAAC5K,OAAOkG,EAAQtE,IAC7BvB,EAAUuK,GACVF,GAAY,OAIlB,CAACzN,IA2DK,oCAGR,kBAAC,GAAD,MAEA,yBAAK2E,GAAG,QACJ,4BAAQJ,UAAU,QACd,uBAAG4F,KAAK,IAAI5F,UAAU,gCAClB,uBAAGA,UAAU,yBAG7B,yBAAKA,UAAU,gBACf,2CAEA,6BACA,yBAAKA,UAAU,gBACX,6BAASA,UAAU,OACf,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,OACf,yBAAKqC,MAAM,QACX,yBAAKA,MAAM,oBACP,2BAAOA,MAAM,kBACT,+BACI,4BACI,wCACA,4CACA,sCACA,4CACA,wCAGR,+BAEI7F,EAAW,OAAGwM,QAAH,IAAGA,GAAH,UAAGA,EAAYhL,YAAf,aAAG,EAAkBvB,OAAO4I,KAAI,SAACgE,EAAIpC,GAAL,eACvC,wBAAIwB,IAAKxB,GACL,wBAAIjH,UAAU,iBAAd,OAA+BqJ,QAA/B,IAA+BA,OAA/B,EAA+BA,EAAKC,KACpC,mCAAKD,QAAL,IAAKA,GAAL,UAAKA,EAAKE,eAAe,UAAzB,aAAK,EAAwB5I,OAE7B,mCAAK0I,QAAL,IAAKA,GAAL,UAAKA,EAAKE,eAAe,UAAzB,aAAK,EAAwBjC,OAC7B,wBAAItH,UAAU,iBAAd,OAA+BqJ,QAA/B,IAA+BA,OAA/B,EAA+BA,EAAKxC,QACpC,wBAAI7G,UAAU,iBAAgC,aAAZ,OAAHqJ,QAAG,IAAHA,OAAA,EAAAA,EAAKxC,SAA4C,SAApBtB,EAAY/J,KAAkB,4BAAQ8E,QAAS,kBAjGvI,SAAqBkJ,GACjB,IAAI/D,EAAMxH,aAAayH,QAAQ,YACxBhB,EAAUvG,IAAWsH,GAEtBsC,EAA2BtH,KAAKuH,MAAM,CACxCC,YAAa,CACXC,cAAe,kBACfC,aAAc,kBAEhBC,gBAAgB,IAGlBL,EAAyBrH,KAAK,CAC5BC,MAAO,qBACPC,KAAM,2CACNC,KAAM,OACN4G,kBAAkB,EAClB3G,kBAAmB,iBACnB8G,iBAAkB,gBAClBS,gBAAgB,IACfvK,MAAK,SAACwK,GACP,GAAIA,EAAOnH,YAAa,CAEpBV,KAAKC,KAAK,CACNC,MAAO,eACPgC,KAAM,+BACNC,gBAAgB,EAChBC,mBAAmB,EACnBC,QAAS,WACPrC,KAAKsC,iBAIX,IAAIzF,EAAU,CACVmM,QAAQ/E,EAAQtE,GAChBsJ,QAAQF,EAAMF,KAElBzL,EAAgBP,GACfQ,MAAK,SAACQ,GACH,IAAI8K,EAAS,CAAC5K,OAAOkG,EAAQtE,IAC7BvB,EAAUuK,GACVrB,EAAyBrH,KACrB,iBACA,kDACA,cAGPtC,OAAM,SAACC,GACJ0J,EAAyBrH,KACrB,YACDrC,EAAIiF,QACH,gBA8CwHqG,CAAYN,IAAMrJ,UAAU,0BAAlD,UAA6F,WAE5L,kCAe3B,kBAAC,GAAD,W,oBCuJMf,GAAqB,CACvBzB,WAAYA,IASD2B,gBAPS,SAAC7D,GAAD,MAAY,CAChCW,QAAQX,EAAMD,YAAYY,QAC1B2N,cAActO,EAAMD,YAAYW,gBAChCuJ,YAAYjK,EAAMD,YAAYM,KAC9BF,gBAAgBH,EAAMD,YAAYI,mBAGEwD,GAAzBE,EA1SA,SAAC,GAOX,EANDN,UAMC,EALDQ,QAKC,EAJDpD,QAIE,IAHF2N,EAGC,EAHDA,cACArE,EAEC,EAFDA,YACA9J,EACC,EADDA,gBACC,EACmC6F,mBAAS,IAD5C,oBACkBuI,GADlB,aAE4CvI,mBAAS,IAFrD,oBAEMwI,EAFN,KAEsBC,EAFtB,OAG4BzI,mBAAS,GAHrC,oBAGc0I,GAHd,aAI8B1I,mBAAS,IAJvC,iCAK8BA,oBAAS,IALvC,oBAKM2H,EALN,KAKeC,EALf,OAMgC5H,mBAAS,GANzC,iCAO6BA,mBAAS,IAPtC,iCAQoCA,mBAAS,IAR7C,iCASkCA,mBAAS,KAT3C,oBASM2I,EATN,KASiBC,EATjB,OAU8C5I,mBAAS,IAVvD,oBAUM6I,EAVN,KAUuBC,EAVvB,OAWmC9I,oBAAS,GAX5C,oBAWK+I,EAXL,KAWiBC,EAXjB,OAY0ChJ,mBAAS,IAZnD,oBAYMiJ,EAZN,KAYqBC,EAZrB,KAiDA,SAASC,IACNvB,GAAY,GACZoB,GAAe,GACf,IAAI7E,EAAMxH,aAAayH,QAAQ,YAE3B0D,GADYjL,IAAWsH,GACd,CAACjH,OAAO+L,IACrBtH,QAAQC,IAAI,sBACU,IAAlBiH,IAEClH,QAAQC,IAAI,sBACbkG,EAASsB,WAAaP,GAE3BQ,EAAcvB,GAAUtL,MAAK,SAACQ,GAC1B,IAAIsM,EAAgB,GACpB3H,QAAQC,IAAI,sBAAsB5E,GAClC,IACIuM,EAAc,EAGdC,EAAS,EACTC,EAAQ,EACZzM,EAASN,KAAKsK,OAAOjD,KAAI,SAAC2F,EAAM/D,GAE5B4D,GAAcG,EAAMF,OAASE,EAAMD,MACnCH,EAAc5H,KAAK,CACfsG,IAAI0B,EAAM1B,IACVwB,OAAOE,EAAMF,OACbC,MAAMC,EAAMD,MACZE,WAAWJ,EACXH,WAAWM,EAAMN,WACjBvD,YAAY6D,EAAM7D,YAClB3I,OAAOwM,EAAMxM,SAEhBsM,GAAQE,EAAMF,OACdC,GAAOC,EAAMD,SAGrB,IAAIG,EAAUJ,EAASC,EACvBhB,EAAmBa,GACnBZ,EAAWkB,GACXrB,EAAcvL,EAASN,MACvBsM,GAAe,GAEfpB,GAAY,MAEZ9K,OAAM,SAACjC,GACJ8G,QAAQC,IAAI/G,MAsEnB,OAvJAqD,qBAAU,WACN,GAAG/D,IAAoBwN,EAAS,CAE/B,IAAIxD,EAAMxH,aAAayH,QAAQ,YACzBhB,EAAUvG,IAAWsH,GAC3B,GAAGf,EAAQyE,cAAc,CACrB,IAAIC,EAAS,CAAC5K,OAAOkG,EAAQtE,IAC7B5C,GAAW4L,GACXF,GAAY,OAGlB,CAACU,EAAcnO,IACjB+D,qBAAU,WACP,IAAIiG,EAAMxH,aAAayH,QAAQ,YACzBhB,EAAUvG,IAAWsH,GAC3B+E,EAAkB9F,EAAQtE,IAY1BkK,GAAe,GACfrH,QAAQC,IAAI,wBACZrF,IAAoBC,MAAK,SAACQ,GACtB2E,QAAQC,IAAI,sBAAsB5E,EAASN,KAAKA,MAChDkM,EAAc5L,EAASN,KAAKA,MAC5BsM,GAAe,MAfnBG,MAED,IAEFjL,qBAAU,WAENiL,MACF,CAACN,EAAiBI,IA+Hb,oCAGR,kBAAC,GAAD,MAEA,yBAAKnK,GAAG,QACJ,4BAAQJ,UAAU,QACd,uBAAG4F,KAAK,IAAI5F,UAAU,gCAClB,uBAAGA,UAAU,yBAG7B,yBAAKA,UAAU,gBACf,gDAEA,6BACA,kBAAC,KAAD,CACEmL,OAAQd,EACRe,SAAO,EACPxK,KAAK,yBAEP,yBAAKZ,UAAU,gBACX,6BAASA,UAAU,OACf,yBAAKA,UAAU,UACX,yBAAKA,UAAU,QACf,wBAAIN,MAAO,CAACiG,UAAU,OAAO0F,OAAO,SAApC,IAA8C,4BAAQ3L,MAAO,CAACkE,MAAM,QAAQiF,MAAM,QAASrF,SAAU,SAACjD,GAAM6J,EAAoB7J,EAAE4B,OAAOjB,QAAWmB,MAAM,cAAcjC,GAAG,eAC3K,4BAAQc,MAAM,IAAd,4BACD+I,EAAW5E,KAAI,SAACiG,EAAKrE,GAClB,OACI,4BAAS/F,MAAOoK,EAAKhC,KAAMgC,EAAKlE,SAAhC,MAA6CkE,EAAKjE,OAAlD,UAIS,SAAlB9B,EAAY/J,MAAiB+J,EAAYnF,IAAMmK,EAAiB,4BAAQ7K,MAAO,CAAC6L,WAAW,OAAOzF,OAAO,UAAWtK,KAAK,SAAS6G,MAAM,mBAChHkI,EADwC,IACxB,0BAAM7K,MAAO,CAACoG,OAAO,WAAYxF,QAAS,kBAAIkK,EAAkBjF,EAAYnF,KAAKiC,MAAM,wBAAvF,OACV,GACV,aAAT,OAAXkD,QAAW,IAAXA,OAAA,EAAAA,EAAa/J,MAAoB,4BAAQkE,MAAO,CAACmJ,MAAM,SAAU7I,UAAU,yBAAyBM,QAAS,kBAnGjH,WACI,IAAIgL,EAAOrB,EAAW5E,KAAI,SAAC+B,EAASH,GAChC,MAAO,iBAAiBG,EAASkC,IAAI,IAAIlC,EAASA,SAAU,KAAMA,EAASC,OAAQ,kBAElFU,EAA2BtH,KAAKuH,MAAM,CACxCC,YAAa,CACXC,cAAe,kBACfC,aAAc,kBAEhBC,gBAAgB,IAGlBL,EAAyBrH,KAAK,CAC5BC,MAAO,kBACPE,KAAM,OACN8B,KAAK,qGAAqG2I,EAAK,qGAC/G7D,kBAAkB,EAClB3G,kBAAmB,YACnB8G,iBAAkB,UAClBS,gBAAgB,EAChBmD,WAAY,WACR,MAAO,CACLC,SAASC,eAAe,cAAcxK,MACtCuK,SAASC,eAAe,UAAUxK,UAGvCpD,MAAK,SAACwK,GAEP,GAAIA,EAAOnH,YAAa,CACpBV,KAAKC,KAAK,CACNC,MAAO,gBACPgC,KAAM,6CACNC,gBAAgB,EAChBC,mBAAmB,EACnBC,QAAS,WACPrC,KAAKsC,iBAGX,IAAIpH,EAAK,CACL+O,WAAWpC,EAAOpH,MAAM,GACxB1C,OAAO+G,EAAYnF,GACnBuL,OAAOrD,EAAOpH,MAAM,IAExBoJ,GAAe,GACfzM,EAAelC,GACdmC,MAAK,SAACQ,GACHgM,GAAe,GACjBG,IACE1C,EAAyBrH,KACrB,YACA,4CACA,cAGPtC,OAAM,SAACC,GACJ0J,EAAyBrH,KACrB,YACDrC,EAAIiF,QACH,gBAyCkGsI,KAAhF,gBAAsH,MAOxJ,yBAAK5L,UAAU,oBACX,yBAAKA,UAAU,OACf,yBAAKqC,MAAM,QACP,6BAGJ,yBAAKA,MAAM,oBACP,2BAAOA,MAAM,kBACT,+BACI,4BACI,8CACqB,SAApBkD,EAAY/J,KAAkB,uCAAmB,GAElD,2CACA,uCACA,qCACA,sCACoB,IAApB2O,EAAyB,wCAAoB,KAIrD,+BAGIlB,EAAQ,OAAGa,QAAH,IAAGA,OAAH,EAAGA,EAAiB+B,UAAUxG,KAAI,SAAC2F,EAAM/D,GAAS,IAAD,MAEjD6E,EAAY,EACZC,EAAW,EAKf,OAJAD,GAAYd,EAAMF,SAClBiB,GAAWf,EAAMD,OAIjB,wBAAItC,IAAKxB,GACJ,wBAAIjH,UAAU,iBAAiBgL,EAAM1B,KAChB,SAApB/D,EAAY/J,KAAkB,wBAAI8E,QAAS,kBAAKkK,EAAkBQ,EAAMxM,SAASkB,MAAO,CAACoG,OAAO,UAAUkG,eAAe,aAAchM,UAAU,iBAAgB,2BAAIgL,EAAMxM,SAAkB,GAC9L,4BAAKwM,EAAM7D,aACX,0CAAM8C,EAAWgC,MAAK,SAAA1L,GAAC,OAAEA,EAAE+I,KAAO0B,EAAMN,qBAAxC,aAAM,EAA+CtD,SAArD,KAGA,wBAAIpH,UAAU,iBAAd,IAA+C,MAAfgL,EAAMD,MAAgB,0BAAM1I,MAAM,yBAAZ,UAAqC4H,EAAWgC,MAAK,SAAA1L,GAAC,OAAEA,EAAE+I,KAAO0B,EAAMN,qBAAvE,aAAqC,EAA+CrD,OAApF,IAA6F2D,EAAMD,OAAgB,OACzK,wBAAI/K,UAAU,iBAAd,IAAgD,MAAhBgL,EAAMF,OAAiB,0BAAMzI,MAAM,0BAAZ,cAAuC4H,EAAWgC,MAAK,SAAA1L,GAAC,OAAEA,EAAE+I,KAAO0B,EAAMN,qBAAzE,aAAuC,EAA+CrD,OAAtF,IAA+F2D,EAAMF,QAAiB,OACxJ,IAApBX,EAAyB,4BAAKa,EAAMC,WAAX,KAA+B,OAM9D,YAiB5B,kBAAC,GAAD,WC5EMhM,GAAqB,CACvBxB,alBjMwB,SAACP,GAAD,MAAe,CACvC1B,KAAK,gBACL0B,ckByMWiC,gBARS,SAAC7D,GAAD,MAAY,CAChCO,cAAcP,EAAMD,YAAYQ,cAChCD,eAAeN,EAAMD,YAAYO,eACjC2J,YAAYjK,EAAMD,YAAYM,KAC9BF,gBAAgBH,EAAMD,YAAYI,mBAIEwD,GAAzBE,EAvNG,SAAC,GAOb,IANF1B,EAMC,EANDA,aAEA5B,GAIC,EALDwD,QAKC,EAJDxD,eACAD,EAGC,EAHDA,eACA2J,EAEC,EAFDA,YACA9J,EACC,EADDA,gBACC,EAC8B6F,oBAAS,GADvC,oBACM2H,EADN,KACeC,EADf,KA8HD,OA5HA1J,qBAAU,WACP,GAAG/D,IAAoBwN,EAAS,CAC/B,IAAIxD,EAAMxH,aAAayH,QAAQ,YACzBhB,EAAUvG,IAAWsH,GAC3B,GAAGf,EAAQyE,cAAc,CACrB,IAAIC,EAAS,CAACK,QAAQ/E,EAAQtE,IAC9B3C,EAAa2L,GACVxN,GACCsN,GAAY,OAKtB,CAACzN,EAAgBG,IA+GX,oCAGR,kBAAC,GAAD,MAEA,yBAAKwE,GAAG,QACJ,4BAAQJ,UAAU,QACd,uBAAG4F,KAAK,IAAI5F,UAAU,gCAClB,uBAAGA,UAAU,yBAG7B,yBAAKA,UAAU,gBACf,2CAEA,6BACA,yBAAKA,UAAU,gBACX,6BAASA,UAAU,OACf,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,OACf,yBAAKqC,MAAM,QACX,yBAAKA,MAAM,oBACP,2BAAOA,MAAM,kBACT,+BACI,4BACI,uCACA,oCACA,qCACA,8CACA,8CACA,wCAGR,+BAEIzG,EAAc,OAAGC,QAAH,IAAGA,OAAH,EAAGA,EAAeqQ,UAAU7G,KAAI,SAAC8G,EAASlF,GAAV,OAC1C,wBAAIwB,IAAKxB,GACL,wBAAIjH,UAAU,iBAAiBmM,EAAS7C,KACxC,4BAAK6C,EAAS5K,MACd,4BAAK4K,EAAS3K,OACd,4BAAK2K,EAAShD,cAAgB,MAAQ,MACtC,wBAAInJ,UAAU,iBAAiBmM,EAASC,eACxC,wBAAIpM,UAAU,iBACb,4BAAQM,QAAS,kBA/F9C,SAAoB6L,GAChB,IAAMpE,EAA2BtH,KAAKuH,MAAM,CACxCC,YAAa,CACXC,cAAe,kBACfC,aAAc,kBAEhBC,gBAAgB,IAGlBL,EAAyBrH,KAAK,CAC5BC,MAAO,cACPC,KAAM,yCACNC,KAAM,OACN4G,kBAAkB,EAClB3G,kBAAmB,eACnB8G,iBAAkB,gBAClBS,gBAAgB,IACfvK,MAAK,SAACwK,GACP,GAAIA,EAAOnH,YAAa,CACpBV,KAAKC,KAAK,CACNC,MAAO,gBACPgC,KAAM,iCACNC,gBAAgB,EAChBC,mBAAmB,EACnBC,QAAS,WACPrC,KAAKsC,iBAGX,IAAIpH,EAAK,CAEL8N,QAAQlE,EAAYnF,GACpB5B,OAAO2N,EAAS7C,KAEpBzL,EAAelC,GACdmC,MAAK,SAACQ,GACHb,EAAa,CAACgM,QAAQ9N,EAAK8N,UAC3B1B,EAAyBrH,KACrB,YACA,gCACA,cAGPtC,OAAM,SAACC,GACJ0J,EAAyBrH,KACrB,YACDrC,EAAIiF,QACH,gBAiD8B+I,CAAWF,IAAW9J,MAAM,yBAAjD,qBAKN,gCAe3B,kBAAC,GAAD,WChIMpD,GAAqB,CACvBtB,WAAYA,GACZ2O,enBlB0B,SAAC5Q,GAAD,MAAW,CACrCF,KAAM,mBACNE,UmBmBWyD,eAAQ,KAAMF,GAAdE,EAzDH,SAAC,GAGN,IAFHmN,EAEE,EAFFA,eACA3O,EACE,EADFA,WAqBA,OAnBA6B,qBAAU,WACN,GAAIvB,aAAa+H,SAAU,CAEvB,IAAMnJ,EAAQoB,aAAa+H,SAC3BpJ,EAAaC,GAEb,IAAM6H,EAAUvG,IAAWtB,GAC3BoG,QAAQC,IAAIwB,GAEZ4H,EAAe5H,GAEf,IAAMC,EAAcC,KAAKC,MAAQ,IAC7BH,EAAQI,IAAMH,IACd1B,QAAQC,IAAI,QACZvF,IACA0G,OAAOC,SAASsB,KAAO,aAGhC,CAAC0G,EAAgB3O,IAEhB,oCACI,kBAAC,KAAD,KACI,kBAAC,KAAD,CAAOoC,OAAK,EAACwM,KAAK,IAAIrG,UAAWsG,KACjC,kBAAC,GAAD,CAAeD,KAAK,aAAarG,UAAW4C,KAC5C,kBAAC,GAAD,CAAcyD,KAAK,aAAarG,UAAWuG,KAE3C,kBAAC,GAAD,CAAeF,KAAK,UAAUrG,UAAWwG,KACzC,kBAAC,GAAD,CAAeH,KAAK,UAAUrG,UAAWyG,KACzC,kBAAC,KAAD,CAAQJ,KAAK,SAASrG,UAAWsG,KACjC,kBAAC,GAAD,CAAczM,OAAK,EAACwM,KAAK,YAAYrG,UAAW0G,KAChD,kBAAC,KAAD,CAAO7M,OAAK,EAACwM,KAAK,gBAAgBrG,UAAW2G,KAC7C,kBAAC,GAAD,CAAc9M,OAAK,EAACwM,KAAK,kBAAkBrG,UAAWI,KACtD,kBAAC,KAAD,CAAOvG,OAAK,EAACwM,KAAK,YAAYrG,UAAW7E,KACzC,kBAAC,KAAD,CAAOtB,OAAK,EAACwM,KAAK,QAAQrG,UAAW4G,KACrC,kBAAC,KAAD,CAAO/M,OAAK,EAACwM,KAAK,qBAAqBrG,UAAWK,KAClD,kBAAC,KAAD,CAAOxG,OAAK,EAACwM,KAAK,UAAUrG,UAAWnB,KAEvC,kBAAC,KAAD,CAAOmB,UAAWhH,MAEtB,kBAAC,KAAD,CACI6N,SAAS,cACTC,UAAW,IACXC,iBAAiB,QC3D3BC,GAAiBC,cAEjBC,GAAQC,YACV3Q,EACA4Q,YAAgBJ,GAAgBK,WAEpCL,GAAeM,IAAIzO,IAEnBqH,iBACI,kBAAC,IAAD,CAAUgH,MAAOA,IACf,kBAAC,IAAD,KACE,kBAAC,GAAD,QAGJ3B,SAASC,eAAe,U","file":"static/js/main.0d2722ee.chunk.js","sourcesContent":["const isEmpty = require(\"is-empty\");\n\nconst userReducer = (state = {}, action) => {\n    switch (action.type) {\n        case 'SET_CURRENT_USER':\n            return {\n                ...state,\n                isAuthenticated: !isEmpty(action.json),\n                user: action.json,\n            };\n        \n            case 'SET_CUSTOMERS':\n            return {\n                ...state, \n                customersFound: !isEmpty(action.json),\n                customersData: action.json,\n            };\n        case 'SET_WALLET':\n            return {\n                ...state,\n                isWalletLoaded: !isEmpty(action.json),\n                wallet: action.json,\n            };\n            case 'SET_WALLET1':\n            return {\n                ...state,\n                isWallet1Loaded: !isEmpty(action.json),\n                wallet1: action.json,\n            };\n        case 'SET_CURRENT_USER_FAILED':\n            return {\n                ...state,\n                loginError: action.error,\n                user:action.json\n            };\n        default:\n            return state;\n    }\n};\nexport default userReducer;\n","const isEmpty = require(\"is-empty\");\n\nconst productsReducer = (state = {}, action) => {\n    switch (action.type) {\n        case 'SET_PRODUCTS':\n            return {\n                ...state,\n                productsFound: !isEmpty(action.json),\n                products: action.json,\n            };\n        default:\n            return state;\n    }\n};\nexport default productsReducer;\n","const isEmpty = require(\"is-empty\");\n\nconst ordersReducer = (state = {}, action) => {\n    switch (action.type) {\n        case 'SET_ORDERS':\n            return {\n                ...state,\n                ordersFound: !isEmpty(action.json),\n                orders: action.json,\n            };\n        default:\n            return state;\n    }\n};\nexport default ordersReducer;\n","import { combineReducers } from 'redux';\nimport userReducer from \"./userReducer\";\nimport productsReducer from \"./productsReducer\";\nimport ordersReducer from './ordersReducer';\n\nconst reducer = combineReducers({\n    userReducer,\n    productsReducer,\n    ordersReducer\n});\n\nexport default reducer;\n","import axios from \"axios\";\n\nconst setAuthToken = token => {\n  if (token) {\n    // Apply authorization token to every request if logged in\n    axios.defaults.headers.common[\"Authorization\"] = token;\n  } else {\n    // Delete auth header\n    delete axios.defaults.headers.common[\"Authorization\"];\n  }\n};\n\nexport default setAuthToken;\n","import axios from \"axios\";\n\nexport default {\n    registerUser: function (userData) {\n        return axios.post(process.env.REACT_APP_API+\"/api/user/register\", userData);\n    },\n    loginUser: function (userData) {\n        return axios.post(process.env.REACT_APP_API+\"/api/user/login\", userData);\n    },\n    passwordLessLogin: function(userData){\n        return axios.post(process.env.REACT_APP_API+\"/api/user/passwordLessLogin\",userData)\n    },\n    forgot : function(userData){\n        return axios.post(process.env.REACT_APP_API+\"/api/user/forgot\",userData)\n    },\n    getCurrencies:function(userData){\n        return axios.get(process.env.REACT_APP_API+\"/api/user/getCurrencies\")\n    },\n    changePassword : function(userData){\n        return axios.post(process.env.REACT_APP_API+\"/api/user/changePassword\",userData)\n    },\n    verifyEmail : function(userData){\n        return axios.post(process.env.REACT_APP_API+\"/api/user/verifyEmail\",userData)\n    },\n    sendVerificationEmail:function(userData){\n        return axios.post(process.env.REACT_APP_API+\"/api/user/sendVerificationEmail\",userData)\n    },\n    loadWallet:function(userData){\n        return axios.post(process.env.REACT_APP_API+\"/api/user/loadWallet\",userData)\n    },\n    getProducts:function(){\n        return axios.get(process.env.REACT_APP_API+\"/api/products\")\n    },\n    placeOrder:function(orderData){\n        return axios.post(process.env.REACT_APP_API+\"/api/order/create\",orderData)\n    },\n    getOrders:function(userData){\n        return axios.post(process.env.REACT_APP_API+\"/api/order\",userData)\n    },\n    refundOrder:function(userData){\n        return axios.post(process.env.REACT_APP_API+\"/api/order/refund\",userData)\n    },\n    getCustomers:function(userData){\n        return axios.post(process.env.REACT_APP_API+\"/api/user\",userData)\n    },\n    getWallet:function(userData){\n        return axios.post(process.env.REACT_APP_API+\"/api/user/getWallet\",userData)\n    },\n    deleteUser:function(userData){\n        return axios.post(process.env.REACT_APP_API+\"/api/user/delete\",userData)\n    },\n    addBalance:function(userData){\n        return axios.post(process.env.REACT_APP_API+\"/api/deposit/balance\",userData)\n    },\n}","import { put, takeLatest } from 'redux-saga/effects';\nimport setAuthToken from \"../../utils/setAuthToken\";\nimport jwt_decode from \"jwt-decode\";\nimport API from \"../../api/api\";\n\nfunction* loginUser(userData) {\n    try {\n        const json = yield API.loginUser(userData.userData)\n            .then(res => {\n                const { token } = res.data;\n                localStorage.setItem(\"jwtToken\", token);\n                setAuthToken(token);\n                const decoded = jwt_decode(token);\n                return (decoded);\n            })\n            .catch(err => {\n                throw err.response.data;\n            });\n        yield put({\n            type: \"SET_CURRENT_USER\",\n            json: json\n        });\n    }\n    catch (error) {\n        yield put({\n            type: 'SET_CURRENT_USER_FAILED',\n            error\n        })\n    }\n\n}\nfunction* getWallet1(userData) {\n    try {\n        const json = yield API.getWallet(userData.userData)\n            .then(res => {\n                const response= res.data;\n\n                return (response);\n            })\n            .catch(err => {\n                throw err.response.data;\n            });\n        yield put({\n            type: \"SET_WALLET1\",\n            json: json\n        });\n    }\n    catch (error) {\n        yield put({\n            type: 'SET_CURRENT_USER_FAILED',\n            error\n        })\n    }\n\n}\n\nfunction* getCustomers(userData) {\n    try {\n        const json = yield API.getCustomers(userData.userData)\n            .then(res => {\n                const response= res.data;\n\n                return (response);\n            })\n            .catch(err => {\n                throw err.response.data;\n            });\n        yield put({\n            type: \"SET_CUSTOMERS\",\n            json: json\n        });\n    }\n    catch (error) {\n        yield put({\n            type: 'SET_CURRENT_USER_FAILED',\n            error\n        })\n    }\n\n}\nfunction* loadWallet(userId) {\n    try {\n        const json = yield API.loadWallet(userId)\n            .then(res => {\n                const wallet  = res.data;\n                return (wallet);\n            })\n            .catch(err => {\n                throw err.response.data;\n            });\n        yield put({\n            type: \"SET_WALLET\",\n            json: json\n        });\n    }\n    catch (error) {\n        yield put({\n            type: 'SET_CURRENT_USER_FAILED',\n            error\n        })\n    }\n\n}\n\nfunction* logOutUser() {\n    localStorage.removeItem(\"jwtToken\");\n    setAuthToken(false);\n    yield put({\n        type: \"SET_CURRENT_USER\",\n        json: {},\n    });\n}\n\nexport default function* actionLoginUser() {\n    yield takeLatest('LOGIN_USER', loginUser)\n    yield takeLatest('GET_CUSTOMERS', getCustomers)\n    yield takeLatest('LOAD_WALLET', loadWallet)\n    yield takeLatest('GET_WALLET1', getWallet1)\n    yield takeLatest('LOGOUT_USER', logOutUser)\n}\n","import { put, takeLatest } from 'redux-saga/effects';\nimport jwt_decode from \"jwt-decode\";\nimport API from \"../../api/api\";\n\nfunction* getProducts() {\n    try {\n        const json = yield API.getProducts()\n            .then(res => {return (res);\n            })\n            .catch(err => {\n                throw err.response.data;\n            });\n        yield put({\n            type: \"SET_PRODUCTS\",\n            json: json\n        });\n    }\n    catch (error) {\n        yield put({\n            type: 'SET_CURRENT_USER_FAILED',\n            error\n        })\n    }\n}\nexport default function* actionProduct() {\n    yield takeLatest('GET_PRODUCTS', getProducts)\n}\n","import { put, takeLatest } from 'redux-saga/effects';\nimport jwt_decode from \"jwt-decode\";\nimport API from \"../../api/api\";\n\nfunction* getOrders(userData) {\n    try {\n        const json = yield API.getOrders(userData.userData)\n            .then(res => {return (res);\n            })\n            .catch(err => {\n                throw err.response.data;\n            });\n        yield put({\n            type: \"SET_ORDERS\",\n            json: json\n        });\n    }\n    catch (error) {\n        yield put({\n            type: 'SET_CURRENT_USER_FAILED',\n            error\n        })\n    }\n}\nexport default function* actionOrder() {\n    yield takeLatest('GET_ORDERS', getOrders)\n}\n","import { all } from 'redux-saga/effects';\nimport actionLoginUser from './userSaga';\nimport actionProduct from './productsSaga';\nimport actionOrder from './ordersSaga';\n\nexport default function* rootSaga() {\n    yield all([\n        actionLoginUser(),\n        actionProduct(),\n        actionOrder()\n    ]);\n}","export const getNews = () => ({\n    type: 'GET_NEWS',\n});\n\nexport const getProducts = () => ({\n    type:'GET_PRODUCTS'\n})\n\nexport const setProducts = (json) =>({\n    type:'SET_PRODUCTS',\n    json\n})\n\nexport const getOrders = (userData) => ({\n    type:'GET_ORDERS',\n    userData\n})\n\nexport const setOrders = (json) =>({\n    type:'SET_ORDERS',\n    json\n})\n\nexport const getCustomers = (userData) => ({\n    type:'GET_CUSTOMERS',\n    userData\n})\n\nexport const setCustomers = (json) =>({\n    type:'SET_CUSTOMERS',\n    json\n})\n\nexport const getWallet1 = (userData) => ({\n    type:'GET_WALLET1',\n    userData\n})\n\nexport const setWallet1 = (json) =>({\n    type:'SET_WALLET1',\n    json\n})\n\nexport const loginUser = (userData) => ({\n    type: 'LOGIN_USER',\n    userData\n});\n\nexport const loadWallet = (userData) => ({\n    type: 'LOAD_WALLET',\n    userData\n});\n\nexport const setWallet = (json) => ({\n    type: 'SET_WALLET',\n    json\n});\n\nexport const logOutUser = () => ({\n    type: 'LOGOUT_USER',\n});\n\nexport const setCurrentUser = (json) => ({\n    type: 'SET_CURRENT_USER',\n    json\n});\n","import React, { useEffect } from \"react\";\nimport { connect } from 'react-redux';\nimport { logOutUser } from \"../../redux/actions/action\";\nimport { Navbar, Nav } from 'react-bootstrap';\nimport { NavLink } from \"react-router-dom\";\nimport Swal from 'sweetalert2'\nfunction Header  ({\n    logOutUser,\n    isAuthenticated,\n    history\n})  {\n    const activeStyle = { color: \"white\",fontWeight:'bold' };\n\n    useEffect(() => {\n    }, [isAuthenticated]);\n\n    function handleClick (e) {\n        e.preventDefault()\n        Swal.fire({\n            title: 'Confirm Logout ! ',\n            text: \"Are you sure you want to log out ? \" ,\n            icon: 'info',\n            confirmButtonText: 'Yes, Logout ',\n            confirmButtonColor:'#007bff',\n            denyButtonText:'No, Cancel',\n            showDenyButton:true,\n          }).then((value)=>{\n            if(value.isConfirmed){\n                logOutUser();\n            }\n          })\n       \n    }\n\n    return (\n        <Navbar style={{color:'white'}} variant=\"dark\" bg=\"dark\"  expand=\"sm\">\n            <NavLink to=\"/\" activeStyle={activeStyle} exact className=\"navbar-brand\">Home</NavLink>\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n            <Navbar.Collapse id=\"basic-navbar-nav\">\n                {(isAuthenticated) ? (\n                    <Nav className=\"mr-auto navbar-right-section\">\n                         <NavLink to=\"/products\" activeStyle={activeStyle} className=\"nav-link\">Products</NavLink>\n                        <NavLink to=\"/wallet\" activeStyle={activeStyle} className=\"nav-link\">Wallet</NavLink>\n                        <NavLink to=\"/changePassword\" activeStyle={activeStyle} className=\"nav-link\">Change Password </NavLink>\n                        <a  className=\"nav-link pointer\" onClick={(e)=>handleClick(e)}>Logout</a>\n                    </Nav>\n                ) : (\n                        <Nav className=\"mr-auto navbar-right-section\">\n                            <NavLink to=\"/register\" activeStyle={activeStyle} className=\"nav-link\">Register</NavLink>\n                            <NavLink to=\"/login\" activeStyle={activeStyle} className=\"nav-link\">Login</NavLink>\n                        </Nav>\n                    )}\n            </Navbar.Collapse>\n        </Navbar>\n    );\n};\n\nconst mapDispatchToProps = {\n    logOutUser: logOutUser,\n};\n\nconst mapStateToProps = (state) => ({\n    user: state.userReducer.user,\n    isAuthenticated: state.userReducer.isAuthenticated,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\n","import React from \"react\";\n\nconst PageNotFound = () => <h1>Oops! Page not found.</h1>;\n\nexport default PageNotFound;\n","import React, { useState,useRef } from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport API from \"../../api/api\";\nimport { toast } from \"react-toastify\";\nimport Swal from 'sweetalert2'\n\nfunction Register({ history }) {\n\n    const [userData, setUserData] = useState({ name: \"\", email: \"\", password: \"\", confirmPassword: \"\",passwordLess:false });\n    const [errors, setErrors] = useState({});\n    const [isActive,setIsActive] = useState(false);\n    const [isPasswordLess,setIsPasswordLess] = useState(false)\n\n    function handleChange(event) {\n        const { name, value } = event.target;\n        setUserData(prevData => ({\n            ...prevData,\n            [name]: value\n        }));\n        setErrors(prevData => ({\n            ...prevData,\n            [name]: \"\"\n        }));\n    }\n\n    function formIsValid() {\n        const { name, email, password, confirmPassword } = userData;\n        const errors = {};\n\n        if (!name) errors.name = \"*Name is required.\";\n        if (!email) errors.email = \"*Email is required\";\n        // if (!password) errors.password = \"*Password is required\";\n        // if (!confirmPassword) errors.confirmPassword = \"*Confirm password is required\"\n\n        setErrors(errors);\n        return Object.keys(errors).length === 0;\n    }\n\n    function handleSave(event) {\n       \n        event.preventDefault();\n        if (!formIsValid()) return;\n        Swal.fire({\n            title: 'Creating Account ! ',\n            html: 'Please wait while we are setting up your account ...',\n            allowEscapeKey: false,\n            allowOutsideClick: false,\n            didOpen: () => {\n              Swal.showLoading()\n            }\n          });\n        setIsActive(true)\n        API.registerUser(userData)\n            .then(() => {\n                setIsActive(false)\n                Swal.fire({\n                    title: 'Account Created !',\n                    text: 'Please check your email inbox to verify your email address !  ' ,\n                    icon: 'success',\n                    confirmButtonText: 'Login ',\n                    confirmButtonColor:'#007bff'\n                  })\n                history.push(\"/login\");\n                setUserData({ name: \"\", email: \"\", password: \"\", confirmPassword: \"\" });\n            })\n            .catch((err) => {\n                setIsActive(false)\n                console.log(err.response.data);\n                if(err.response.data.alreadyExists)\n                {\n                    Swal.fire({\n                        title: 'Failed  ! ',\n                        text: \"This Email is already associated with another account !\" ,\n                        icon: 'error',\n                        confirmButtonText: 'Login To Account ',\n                        confirmButtonColor:'#007bff',\n                        denyButtonText:'Use Another Email',\n                        showDenyButton:true,\n                      }).then((value)=>{\n                          console.log(value)\n                        if(value.isConfirmed){\n                           history.push(\"/login\");\n                        }\n                        if(value.isDenied){\n                            setUserData(prevState => ({\n                                ...prevState,\n                                email: \"\",\n                            }))\n                        }\n                      })\n                }\n                else{\n                    Swal.fire({\n                        title: 'Failed   ! ',\n                        text: err.response.data.message ,\n                        icon: 'error',\n                        confirmButtonText: 'OK',\n                        confirmButtonColor:'red'\n                      })\n                }\n            })\n        // setSaving(true);\n        // saveCourse(course)\n        //     .then(() => {\n        //         toast.success(\"Course saved.\");\n        //         history.push(\"/courses\");\n        //     })\n        //     .catch(error => {\n        //         setSaving(false);\n        //         setErrors({ onSave: error.message });\n        //     });\n    }\n\n    return (\n        <div className=\"register-form\">\n                <div id=\"auth\">\n        \n        <div class=\"row h-100 justify-content-center\">\n            <div class=\"col-lg-5 col-12\">\n                <div id=\"auth-left\" className=''>\n               \n                    <h1 class=\"auth-title\">Sign up.</h1>\n                    <p class=\"auth-subtitle mb-5\">Create new account !</p>\n        \n                    <form onSubmit={handleSave}>\n                    <div class=\"form-group position-relative has-icon-left mb-4\">\n                            <input type=\"text\"  disabled={isActive} value={userData.name} onChange={handleChange} class=\"form-control form-control-xl\" name=\"name\" placeholder=\"Full Name\"/>\n                            <div class=\"form-control-icon\">\n                                <i class=\"bi bi-person\"></i>\n                            </div>\n                        </div>\n                        {errors.name ? <div className=\"form-error\">{errors.name}</div> : null}\n                        <div class=\"form-group position-relative has-icon-left mb-4\">\n                            <input type=\"text\"  disabled={isActive} value={userData.email} onChange={handleChange} class=\"form-control form-control-xl\" name=\"email\" placeholder=\"Email Address\"/>\n                            <div class=\"form-control-icon\">\n                                <i class=\"bi bi-envelope\"></i>\n                            </div>\n                        </div>\n                        {errors.email ? <div className=\"form-error\">{errors.email}</div> : null}\n\n                        {!userData.passwordLess ? <div><div class=\"form-group position-relative has-icon-left mb-4\">\n                            <input  disabled={isActive} value={userData.password} onChange={handleChange} type=\"password\" class=\"form-control form-control-xl\" name=\"password\" placeholder=\"Password\"/>\n                            <div class=\"form-control-icon\">\n                                <i class=\"bi bi-shield-lock\"></i>\n                            </div>\n                        </div>\n                      \n\n                        <div class=\"form-group position-relative has-icon-left mb-4\">\n                            <input  disabled={isActive} value={userData.confirmPassword} onChange={handleChange} type=\"password\" class=\"form-control form-control-xl\" name=\"confirmPassword\" placeholder=\"Confirm Password\"/>\n                            <div class=\"form-control-icon\">\n                                <i class=\"bi bi-shield-lock\"></i>\n                            </div>\n                        </div>\n                       \n                        </div> :\"\"}\n                        <div class=\"form-check\">\n                                        <div class=\"checkbox\">\n                                            <input onChange={ () => setUserData(prevData => ({\n            ...prevData,\n            passwordLess: !userData.passwordLess\n        }))} name=\"passwordLess\" type=\"checkbox\" id=\"checkbox1\" class=\"form-check-input\"  checked={userData.passwordLess} />\n                                            <label for=\"checkbox1\">Password Less Signup </label>\n                                        </div>\n                                    </div>\n                        <button disabled={isActive} type='submit' class=\"btn btn-primary btn-block btn-lg shadow-lg mt-5\">Sign Up</button>\n                    </form>\n                    <div class=\"text-center mt-5 text-lg fs-4\">\n                        <p class=\"text-gray-600\">Already have an account ? <a onClick={()=> history.push(\"/login\")} class=\"pointer font-bold\">Sign\n                                in</a></p>\n                        <p><a class=\"font-bold pointer\" onClick={()=> history.push(\"/forgot\")} >Forgot password?</a></p>\n                    </div>\n                    {isActive ?  <center><div className='loading-spinner'> <img width=\"90\" src=\"loading.gif\"/>  </div></center>: <div className='loading-spinner'></div>}\n                </div>\n            </div>\n           \n        </div>\n        \n        </div>\n        \n             {/* <br/>\n            <h3>Create new Account </h3> <hr/>\n            <Form onSubmit={handleSave}>\n                <Form.Group controlId=\"formBasicName\">\n                    <Form.Label>Your Name</Form.Label>\n                    <Form.Control\n                        type=\"text\"\n                        placeholder=\"\"\n                        disabled={isActive}\n                        name=\"name\"\n                        value={userData.name}\n                        onChange={handleChange}\n                    />\n                    {errors.name ? <div className=\"form-error\">{errors.name}</div> : null}\n                </Form.Group>\n                <Form.Group controlId=\"formBasicEmail\">\n                    <Form.Label>Your Email address</Form.Label>\n                    <Form.Control\n                        type=\"email\"\n                        disabled={isActive}\n                        placeholder=\"\"\n                        name=\"email\"\n                        value={userData.email || \"\"}\n                        onChange={handleChange}\n                    />\n                    {errors.email ? <div className=\"form-error\">{errors.email}</div> : null}\n                </Form.Group>\n                <Form.Group controlId=\"formBasicPassword\">\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control\n                        type=\"password\"\n                        placeholder=\"\"\n                        disabled={isActive}\n                        name=\"password\"\n                        value={userData.password}\n                        onChange={handleChange}\n                    />\n                    {errors.password ? <div className=\"form-error\">{errors.password}</div> : null}\n                </Form.Group>\n                <Form.Group controlId=\"formBasicConfirmPassword\">\n                    <Form.Label>Confirm Password</Form.Label>\n                    <Form.Control\n                        type=\"password\"\n                        placeholder=\"\"\n                        disabled={isActive}\n                        name=\"confirmPassword\"\n                        value={userData.confirmPassword}\n                        onChange={handleChange}\n                    />\n                    {errors.confirmPassword ? <div className=\"form-error\">{errors.confirmPassword}</div> : null}\n                </Form.Group>\n                \n                <Button variant=\"primary\" type=\"submit\">\n                    Register\n                </Button>\n                <Button className='ml-10'  onClick={()=>{history.push('/login')}} variant=\"default\" type=\"button\">\n                    Already have an Account ? <i><b>Login</b></i>\n                </Button>\n            </Form> */}\n        </div>\n    )\n}\n\nexport default Register;\n","import React, { useState, useEffect } from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { loginUser } from \"../../redux/actions/action\";\nimport Swal from 'sweetalert2'\nimport API from '../../api/api';\nimport jwt_decode from \"jwt-decode\";\nconst Login = ({ \n    history, \n    loginUser, \n    loginError,\n    isAuthenticated,\n    loginResponsePayload\n }) => {\n    const [userData, setUserData] = useState({ email: \"\", password: \"\",passwordLess:false });\n    const [errors, setErrors] = useState({});\n    const [isActive,setIsActive] = useState(false);\n\n    useEffect(()=>{\n        const query = new URLSearchParams(window.location.search);\n        const uid = query.get('tmp')\n        if(uid){\n            try{\n                if(typeof uid == null || typeof uid ==undefined){\n                    throw new Error(\"Invalid Login Link \")\n                }\n                const decoded = jwt_decode(uid);\n                const currentTime = Date.now() / 1000;\n                if (decoded.exp < currentTime) {\n                    Swal.fire({\n                        title: 'Invalid/Expired  Link ',\n                        text: 'This Link is Invalid/Expired, Please Try again  !' ,\n                        icon: 'error',\n                        confirmButtonText: 'OK',\n                        confirmButtonColor:'red'\n                      }).then(()=>{\n                         history.push('/forgot')\n                      })\n                }\n                else{\n                  \n                    Swal.fire({\n                        title: 'Logging In ! ',\n                        html: 'Please wait...',\n                        allowEscapeKey: false,\n                        allowOutsideClick: false,\n                        didOpen: () => {\n                          Swal.showLoading()\n                        }\n                      });\n                    setIsActive(true)\n                    loginUser({passwordLess:true,token:uid});\n                   \n                    loginAttemptResponse()\n                   \n                }\n            }\n            catch(error){\n                Swal.fire({\n                    title: 'Invalid/Expired  Link ',\n                    text: 'This Link is Invalid/Expired, Please reset your password again !' ,\n                    icon: 'error',\n                    confirmButtonText: 'OK',\n                    confirmButtonColor:'red'\n                  }).then(()=>{\n                      history.push('/forgot')\n                  })\n            }\n        }\n    },[])\n    useEffect(() => {\n     \n        if (isAuthenticated) {\n           handleLoginSuccess()\n        }\n          \n    }, [isAuthenticated,history]);\n\n   useEffect(()=>{\n     loginAttemptResponse();\n   },[loginError])\n\n    function handleChange(event) {\n        const { name, value } = event.target;\n        setUserData(prevData => ({\n            ...prevData,\n            [name]: value\n        }));\n        setErrors(prevData => ({\n            ...prevData,\n            [name]: \"\"\n        }));\n    }\n    function formIsValid() {\n        const { email, password,passwordLess } = userData;\n        const errors = {};\n\n        if (!email) errors.email = \"*Email is required\";\n        if (!password && !passwordLess) errors.password = \"*Password is required\";\n\n        setErrors(errors);\n        return Object.keys(errors).length === 0;\n    }\n\n    function handleLoginSuccess(){\n        setIsActive(false)\n        Swal.fire({\n            title: 'Success ! ',\n            text: 'You Have successfully logged in to your Account ! ' ,\n            icon: 'success',\n            confirmButtonText: 'View Dashboard',\n            confirmButtonColor:'#007bff'\n          }).then(()=>{\n            history.push(\"/products\");\n          })\n    }\n    function sendVerificationEmail(){\n        API.sendVerificationEmail({email:userData.email})\n        .then(()=>{\n            Swal.fire({\n                title: 'Email Sent ! ',\n                text: 'Please check your inbox for Email Verification Link ! ' ,\n                icon: 'info',\n                confirmButtonText: 'Verified ? Click Here to Login Now',\n                confirmButtonColor:'#007bff'\n              }).then(()=>{\n                history.push(\"/login\");\n              })\n        })\n        .catch((error)=>{\n            Swal.fire({\n                title: 'Email Sending Failed !',\n                text: error.message,\n                icon: 'warning',\n                confirmButtonText: 'Close',\n                confirmButtonColor:'#007bff',\n             \n            })\n        })\n    }\n    function handleLoginError(){\n        setIsActive(false)\n        // alert(JSON.stringify(loginError))\n        if(loginError.statusCode == 401)\n        {\n            Swal.fire({\n                title: 'Email Not Verified !',\n                text: loginError.message,\n                icon: 'warning',\n                confirmButtonText: 'Resend Email',\n                confirmButtonColor:'#007bff',\n                denyButtonText:'Close',\n                showDenyButton:true\n              }).then((value)=>{\n                  if(value.isConfirmed){\n                      //resend Email \n                     sendVerificationEmail()\n                  }\n              })\n        }\n        else{\n            Swal.fire({\n                title: 'Login Failed !',\n                text: loginError.message,\n                icon: 'error',\n                confirmButtonText: 'Okay, Try Again ',\n                confirmButtonColor:'red',\n              })\n        }\n    }\n    function loginAttemptResponse(){\n        if(loginError){\n           handleLoginError()\n        }\n        if (isAuthenticated) {\n            handleLoginSuccess()\n        }\n    }\n    function passwordLessLogin(){\n\n    }\n    function handleSave(event) {\n        event.preventDefault();\n        if (!formIsValid()) return;\n        if(userData.passwordLess){\n            Swal.fire({\n                title: 'Sending  Login Link  ',\n                html: 'Please wait...',\n                allowEscapeKey: false,\n                allowOutsideClick: false,\n                didOpen: () => {\n                  Swal.showLoading()\n                }\n              });\n          \n            API.passwordLessLogin(userData).then((response)=>{\n                Swal.fire({\n                    title:\"Login Link Sent\",\n                    icon:\"success\"\n                })\n            })\n            .catch((error)=>{\n                Swal.fire({\n                    title:\"Failed\",\n                    html:error.message ,\n                    icon:\"error\"\n                })\n            })\n        \n        }\n        else{\n        \n        Swal.fire({\n            title: 'Logging In ! ',\n            html: 'Please wait...',\n            allowEscapeKey: false,\n            allowOutsideClick: false,\n            didOpen: () => {\n              Swal.showLoading()\n            }\n          });\n        setIsActive(true)\n        loginUser(userData);\n       \n        loginAttemptResponse()\n        }\n    }\n\n    return (\n        <div className=\"register-form\">\n            \n            <div id=\"auth\">\n        \n<div class=\"row h-100 justify-content-center\">\n    <div class=\"col-lg-5 col-12\">\n        <div id=\"auth-left\" className=''>\n       \n            <h1 class=\"auth-title\">Log in.</h1>\n            <p class=\"auth-subtitle mb-5\">Login to acces your dashboard.</p>\n\n            <form onSubmit={handleSave}>\n                <div class=\"form-group position-relative has-icon-left mb-4\">\n                    <input type=\"text\"  disabled={isActive} value={userData.email} onChange={handleChange} class=\"form-control form-control-xl\" name=\"email\" placeholder=\"Email Address\"/>\n                    <div class=\"form-control-icon\">\n                        <i class=\"bi bi-person\"></i>\n                    </div>\n                </div>\n                {errors.email ? <div className=\"form-error\">{errors.email}</div> : null}\n\n                {!userData.passwordLess ?  <div><div class=\"form-group position-relative has-icon-left mb-4\">\n                    <input  disabled={isActive} value={userData.password} onChange={handleChange} type=\"password\" class=\"form-control form-control-xl\" name=\"password\" placeholder=\"Password\"/>\n                    <div class=\"form-control-icon\">\n                        <i class=\"bi bi-shield-lock\"></i>\n                    </div>\n                </div>\n                {errors.password ? <div className=\"form-error\">{errors.password}</div> : null}</div>:\"\"}\n                \n               \n\n                <div class=\"form-check\">\n                                        <div class=\"checkbox\">\n                                            <input onChange={ () => setUserData(prevData => ({\n            ...prevData,\n            passwordLess: !userData.passwordLess\n        }))} name=\"passwordLess\" type=\"checkbox\" id=\"checkbox1\" class=\"form-check-input\"  checked={userData.passwordLess} />\n                                            <label for=\"checkbox1\">Password Less Login </label>\n                                        </div>\n                                    </div>\n\n\n\n                <button disabled={isActive} type='submit' class=\"btn btn-primary btn-block btn-lg shadow-lg mt-5\">Log in</button>\n            </form>\n            <div class=\"text-center mt-5 text-lg fs-4\">\n                <p class=\"text-gray-600\">Don't have an account? <a onClick={()=> history.push(\"/register\")} class=\"pointer font-bold\">Sign\n                        up</a></p>\n                <p><a class=\"font-bold pointer\" onClick={()=> history.push(\"/forgot\")} >Forgot password?</a></p>\n            </div>\n            {isActive ?  <center><div className='loading-spinner'> <img width=\"90\" src=\"loading.gif\"/>  </div></center>: <div className='loading-spinner'></div>}\n        </div>\n    </div>\n   \n</div>\n\n</div>\n             {/* <br/>\n            <h3>Log in to your account  </h3> <hr/>\n            <Form onSubmit={handleSave}>\n                <Form.Group controlId=\"formBasicEmail\">\n                    <Form.Label>Email address</Form.Label>\n                    <Form.Control\n                        type=\"email\"\n                        placeholder=\"\"\n                        name=\"email\"\n                        disabled={isActive}\n                        value={userData.email}\n                        onChange={handleChange}\n                    />\n                    {errors.email ? <div className=\"form-error\">{errors.email}</div> : null}\n                </Form.Group>\n                <Form.Group controlId=\"formBasicPassword\">\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control\n                        type=\"password\"\n                        placeholder=\"\"\n                        disabled={isActive}\n                        name=\"password\"\n                        value={userData.password}\n                        onChange={handleChange}\n                    />\n                    {errors.password ? <div className=\"form-error\">{errors.password}</div> : null}\n                </Form.Group>\n                <a onClick={()=>{history.push('/forgot')}} className=\"forgot-password\">Forgot Password ? </a><br/><br/>\n                <Button variant=\"primary\" type=\"submit\">\n                    Login\n                </Button>\n                <Button className='ml-10'  onClick={()=>{history.push('/register')}} variant=\"default\" type=\"button\">\n                    Register\n                </Button>\n            </Form> */}\n         \n        </div>\n    )\n}\n\nconst mapDispatchToProps = {\n    loginUser: loginUser,\n};\n\nconst mapStateToProps = (state) => ({\n    isAuthenticated: state.userReducer.isAuthenticated,\n    loginResponsePayload:state.userReducer.user,\n    loginError:state.userReducer.loginError\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n","import React, { useState } from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport API from \"../../api/api\";\nimport { toast } from \"react-toastify\";\nimport Swal from 'sweetalert2'\nimport BounceLoader from 'react-spinners/DotLoader'\nfunction ForgotPassword({ history }) {\n    const [userData, setUserData] = useState({ email: \"\"});\n    const [errors, setErrors] = useState({});\n    const [isActive,setIsActive] = useState(false);\n\n    function handleChange(event) {\n        const { name, value } = event.target;\n        setUserData(prevData => ({\n            ...prevData,\n            [name]: value\n        }));\n        setErrors(prevData => ({\n            ...prevData,\n            [name]: \"\"\n        }));\n    }\n    function formIsValid() {\n        const {  email } = userData;\n        const errors = {};\n\n    \n        if (!email) errors.email = \"*Email is required\";\n    \n\n        setErrors(errors);\n        return Object.keys(errors).length === 0;\n    }\n   \n    function handleSave(event) {\n       \n       \n        event.preventDefault();\n       \n        if (!formIsValid()) return;\n        setIsActive(true)\n        Swal.fire({\n            title: 'Password Reset ! ',\n            html: 'Sending Password Reset Link, Please wait...',\n            allowEscapeKey: false,\n            allowOutsideClick: false,\n            didOpen: () => {\n              Swal.showLoading()\n            }\n          });\n        API.forgot(userData)\n            .then(() => {\n                setIsActive(false)\n                Swal.fire({\n                    title: 'Password Reset  ! ',\n                    text: 'Password Reset Link has been Sent to Your Email, Please Check Your Email Inbox !  ' ,\n                    icon: 'success',\n                    confirmButtonText: 'OK',\n                    confirmButtonColor:'#007bff'\n                  }).then(()=>{\n                    setUserData({email: \"\" });\n                    history.push(\"/login\");\n                  })\n            })\n            .catch((err) => {\n                setIsActive(false)\n                console.log(err.response.data);\n                toast.error()\n                Swal.fire({\n                    title: 'Password Reset ! ',\n                    text: err.response.data.message ,\n                    icon: 'error',\n                    confirmButtonText: 'OK',\n                    confirmButtonColor:'red'\n                  })\n            })\n        // setSaving(true);\n        // saveCourse(course)\n        //     .then(() => {\n        //         toast.success(\"Course saved.\");\n        //         history.push(\"/courses\");\n        //     })\n        //     .catch(error => {\n        //         setSaving(false);\n        //         setErrors({ onSave: error.message });\n        //     });\n    }\n\n    return (\n        <div className=\"register-form\">\n                    <div id=\"auth\">\n        \n        <div class=\"row h-100 justify-content-center\">\n            <div class=\"col-lg-5 col-12\">\n               <div id=\"auth-left\" className=''>\n            <h1 class=\"auth-title\">Forgot Password</h1>\n            <p class=\"auth-subtitle mb-5\">Input your email and we will send you reset password link.</p>\n\n            <form onSubmit={handleSave}>\n                <div class=\"form-group position-relative has-icon-left mb-4\">\n                    <input type=\"email\"  onChange={handleChange} value={userData.email} name='email' class=\"form-control form-control-xl\" placeholder=\"Email\" />\n                    <div class=\"form-control-icon\">\n                        <i class=\"bi bi-envelope\"></i>\n                    </div>\n                </div>\n                {errors.email ? <div className=\"form-error\">{errors.email}</div> : null}\n                <button disabled={isActive} type='submit' class=\"btn btn-primary btn-block btn-lg shadow-lg mt-5\">Reset Password </button>\n            </form>\n            <div class=\"text-center mt-5 text-lg fs-4\">\n                <p class='text-gray-600'>Remember your account ? <a onClick={()=> history.push('/login')} class=\"pointer font-bold\">Log in</a>.\n                </p>\n            </div>\n            </div>\n              {/* {isActive ?  <div className='loading-spinner'> <img width=\"90\" src=\"loading.gif\"/>  </div>: <div className='loading-spinner'></div>}\n            <br/>\n            <h3>Forgot Account Password ?  </h3>\n            <hr/>\n            <Form onSubmit={handleSave}>\n                \n                <Form.Group controlId=\"formBasicEmail\">\n                    <Form.Label>Enter Your Email address</Form.Label>\n                    <Form.Control\n                        type=\"email\"\n                        placeholder=\"\"\n                        name=\"email\"\n                        value={userData.email}\n                        onChange={handleChange}\n                    />\n                    {errors.email ? <div className=\"form-error\">{errors.email}</div> : null}\n                </Form.Group>\n               \n              \n               \n                <Button variant=\"primary\" type=\"submit\">\n                    Reset Password \n                </Button>\n            </Form>\n            <br/> */}\n                    </div>\n                </div>\n           </div>\n        </div>\n    )\n}\n\nexport default ForgotPassword;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { getNews } from '../../redux/actions/action';\n\nconst News = ({ getNews, article,}) => {\n    return (\n        <div>\n            <button onClick={getNews}>Press to see news</button>\n            {/* {article.map((item) => (\n                <h1>one</h1>\n            ))}; */}\n            {console.log({ article })}\n            {(article) ? (\n                article.map((item) => (\n                    <h1>{item.title}</h1>\n                ))\n            ) : (<h2>nothing</h2>)}\n        </div>\n    )\n}\n\nconst mapDispatchToProps = {\n    getNews: getNews,\n};\n\nconst mapStateToProps = (state) => ({\n    article: state.newsReducer.news,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(News);\n","import React, { useEffect, useState } from 'react'\nimport { NavLink } from \"react-router-dom\";\nimport { connect } from 'react-redux';\nimport { logOutUser,loadWallet } from \"../../redux/actions/action\";\nimport Swal from 'sweetalert2'\nimport jwt_decode from \"jwt-decode\";\nfunction Sidebar ({\n    logOutUser,\n    isAuthenticated,\n    history,\n    loadWallet,\n    userProfile\n}) {\n    const [type,setType] = useState(\"customer\")\n\n    useEffect(()=>{\n        var tok = localStorage.getItem(\"jwtToken\");\n        const decoded = jwt_decode(tok);\n        if(decoded.type==\"admin\"){\n            setType(\"admin\")\n        }\n    },[])\n    \n    function handleClick (e) {\n        e.preventDefault()\n        Swal.fire({\n            title: 'Confirm Logout ! ',\n            text: \"Are you sure you want to log out ? \" ,\n            icon: 'info',\n            confirmButtonText: 'Yes, Logout ',\n            confirmButtonColor:'#435ebe',\n            denyButtonText:'No, Cancel',\n            showDenyButton:true,\n          }).then((value)=>{\n            if(value.isConfirmed){\n                logOutUser();\n            }\n          })\n       \n    }\n  return (\n    <div>\n         <div id=\"sidebar\" className=\"active\">\n            <div className=\"sidebar-wrapper active\">\n    <div className=\"sidebar-header\">\n        <div className=\"d-flex justify-content-between\">\n            <div className=\"logo\">\n                <a style={{textAlign:'center'}} > \n                    Dashboard\n                </a>\n            </div>\n            <div className=\"toggler\">\n                <a href=\"#\" className=\"sidebar-hide d-xl-none d-block\"><i className=\"bi bi-x bi-middle\"></i></a>\n            </div>\n        </div>\n    </div>\n    <div className=\"sidebar-menu\">\n        <ul className=\"menu\">\n         \n       \n            <NavLink to=\"/products\">\n            <li\n                className={`sidebar-item ${window.location.href.includes(\"products\") ? \"active\" : \"\" }`}>\n               \n                <a className='sidebar-link'>\n                    <i className=\"bi bi-cart4\"></i>\n                    <span>Buy Products</span>\n                </a>\n               \n               \n            </li>\n            </NavLink>\n            <NavLink to=\"/orders\">\n            <li\n                 className={`sidebar-item  ${window.location.href.includes(\"orders\") ? \"active\" : \"\" }`}>\n                \n                <a className='sidebar-link'>\n                    <i className=\"bi bi-menu-button-wide\"></i>\n                    <span>Orders</span>\n                </a>\n               \n               \n            </li>\n            </NavLink>\n            <NavLink to=\"/wallet\">\n            <li\n                 className={`sidebar-item  ${window.location.href.includes(\"wallet\") ? \"active\" : \"\" }`}>\n                <a className='sidebar-link'>\n                    <i className=\"bi bi-grid-1x2-fill\"></i>\n                    <span>Wallet</span>\n                </a>\n                \n            </li>\n            </NavLink>\n{type == \"admin\" ? <NavLink to=\"/customers\">\n            <li\n                 className={`sidebar-item  ${window.location.href.includes(\"customers\") ? \"active\" : \"\" }`}>\n                <a className='sidebar-link'>\n                    <i className=\"bi bi-person\"></i>\n                    <span>Customers</span>\n                </a>\n                \n            </li>\n            </NavLink>:\"\" }\n           \n           <hr/>\n          \n\n\n            <NavLink to=\"/changePassword\">\n            <li\n                 className={`sidebar-item  ${window.location.href.includes(\"changePass\") ? \"active\" : \"\" }`}>\n                <a  className='sidebar-link'>\n                    <i className=\"bi bi-puzzle\"></i>\n                    <span>Change Password</span>\n                </a>\n            </li>\n            </NavLink>\n\n            <NavLink to=\"/transactions\">\n            <li\n                 className={`sidebar-item `}>\n                <a onClick={handleClick} style={{cursor:\"pointer\"}} className='sidebar-link'>\n                    <i className=\"bi bi-power\"></i>\n                    <span>Logout</span>\n                </a>\n            </li>\n            </NavLink>\n        </ul>\n    </div>\n    <button className=\"sidebar-toggler btn x\"><i data-feather=\"x\"></i></button>\n</div>\n        </div>\n    </div>\n  )\n}\nconst mapDispatchToProps = {\n    logOutUser: logOutUser,\n  \n};\n\nconst mapStateToProps = (state) => ({\n    user: state.userReducer.user,\n    isAuthenticated: state.userReducer.isAuthenticated,\n    userProfile:state.userReducer.user,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Sidebar);","import React, { useEffect, useState } from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { logOutUser } from \"../../redux/actions/action\";\nimport Header from '../common/Header'\nimport API from \"../../api/api\";\nimport { toast } from \"react-toastify\";\nimport Swal from 'sweetalert2'\nimport jwt_decode from \"jwt-decode\";\nimport Sidebar from \"../common/Sidebar\"\nfunction ChangePassword({ history, logOutUser}) {\n    const [userData, setUserData] = useState({ password: \"\",confirmPassword:\"\",userId:\"\"});\n    const [errors, setErrors] = useState({});\n    const [isActive,setIsActive] = useState(false);\n  \n    useEffect(()=>{\n        if (localStorage.jwtToken) {\n            const token = localStorage.jwtToken;\n            // Decode token and get user info and exp\n            const decoded = jwt_decode(token);    \n            setUserData(prevState => ({\n                ...prevState,\n                userId: decoded.id,\n            }))       \n        }\n    },[])\n    function handleChange(event) {\n        const { name, value } = event.target;\n        setUserData(prevData => ({\n            ...prevData,\n            [name]: value\n        }));\n        setErrors(prevData => ({\n            ...prevData,\n            [name]: \"\"\n        }));\n    }\n    function formIsValid() {\n        const {  password,confirmPassword } = userData;\n        const errors = {};\n  \n        if (!password) errors.password = \"*Password is required\";\n        if (!confirmPassword) errors.confirmPassword = \"*Confirm password is required\"\n        setErrors(errors);\n        return Object.keys(errors).length === 0;\n    }\n\n    function handleSave(event) {\n     \n        event.preventDefault();\n        if (!formIsValid()) return;\n        Swal.fire({\n            title: 'Changing Password  ! ',\n            html: 'Please wait...',\n            allowEscapeKey: false,\n            allowOutsideClick: false,\n            didOpen: () => {\n              Swal.showLoading()\n            }\n          });\n        setIsActive(true)\n        API.changePassword(userData)\n            .then((response) => {\n                setIsActive(false)\n                Swal.fire({\n                    title: 'Password Changed !',\n                    text: 'You Password Has Been Updated Successfully, Please Login Again ! ',\n                    icon: 'success',\n                    confirmButtonText: 'OK',\n                    confirmButtonColor:'#007bff'\n                  }).then(()=>{\n                    logOutUser();\n                    setUserData({password: \"\",confirmPassword:\"\" });\n                    history.push(\"/login\");\n              })\n            })\n            .catch((err) => {\n                setIsActive(false)\n                console.log(err.response.data);\n                toast.error()\n                Swal.fire({\n                    title: 'Failed ! ',\n                    text: err.response.data.message ,\n                    icon: 'error',\n                    confirmButtonText: 'OK',\n                    confirmButtonColor:'red'\n                  })\n            })\n     \n    }\n\n    return (\n        <>\n         <Sidebar />\n        <div className=\"register-form\">\n            \n        <div id=\"auth\">\n        \n        <div class=\"row h-100 justify-content-center\">\n            <div class=\"col-lg-5 col-12\"><br/>\n                <div id=\"auth-left\" className=''>\n               \n                    <h1 class=\"auth-title\">Password.</h1>\n                    <p class=\"auth-subtitle mb-5\">Change Your Password </p>\n        \n                    <form onSubmit={handleSave}>\n                        <div class=\"form-group position-relative has-icon-left mb-4\">\n                            <input type=\"password\"  disabled={isActive} value={userData.password} onChange={handleChange} class=\"form-control form-control-xl\" name=\"password\" placeholder=\"New Password\"/>\n                            <div class=\"form-control-icon\">\n                            <i class=\"bi bi-shield-lock\"></i>\n                            </div>\n                        </div>\n                        {errors.password ? <div className=\"form-error\">{errors.password}</div> : null}\n                        <div class=\"form-group position-relative has-icon-left mb-4\">\n                            <input type=\"password\" disabled={isActive} value={userData.confirmPassword} onChange={handleChange} class=\"form-control form-control-xl\" name=\"confirmPassword\" placeholder=\"Re-Enter New Password \"/>\n                            <div class=\"form-control-icon\">\n                                <i class=\"bi bi-shield-lock\"></i>\n                            </div>\n                        </div>\n                        {errors.password ? <div className=\"form-error\">{errors.confirmPassword}</div> : null}\n                       \n                        <button disabled={isActive} type='submit' class=\"btn btn-primary btn-block btn-lg shadow-lg mt-5\">Update Password</button>\n                    </form>\n                    \n                    \n                </div>\n            </div>\n           \n        </div>\n        \n        </div>\n\n              {/* <br/>\n            <h3>Change Account Password </h3>\n            <hr/>\n            <Form onSubmit={handleSave}>\n                \n           \n            <Form.Group controlId=\"formBasicPassword\">\n                    <Form.Label><b>New Password</b></Form.Label>\n                    <Form.Control\n                        type=\"password\"\n                        placeholder=\"Enter New Password \"\n                        name=\"password\"\n                        value={userData.password}\n                        onChange={handleChange}\n                    />\n                    {errors.password ? <div className=\"form-error\">{errors.password}</div> : null}\n            </Form.Group>\n\n            <Form.Group controlId=\"formBasicConfirmPassword\">\n                <Form.Label><b>Confirm New Password</b></Form.Label>\n                <Form.Control\n                    type=\"password\"\n                    placeholder=\"Re-Enter New Password \"\n                    name=\"confirmPassword\"\n                    value={userData.confirmPassword}\n                    onChange={handleChange}\n                />\n                {errors.confirmPassword ? <div className=\"form-error\">{errors.confirmPassword}</div> : null}\n            </Form.Group>\n               \n              \n               \n                <Button variant=\"primary\" type=\"submit\">\n                   Update Password \n                </Button>\n            </Form>\n            <br/> */}\n          \n        </div>\n        </>\n    )\n}\nconst mapDispatchToProps = {\n    logOutUser: logOutUser,\n};\n\nconst mapStateToProps = (state) => ({\n    user: state.userReducer.user,\n    isAuthenticated: state.userReducer.isAuthenticated,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChangePassword);","import React from 'react';\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from 'react-redux';\n\nconst PrivateRoute = ({\n    component: Component,\n    isAuthenticated,\n    ...rest\n}) => (\n        <Route\n            {...rest}\n            render={props =>\n                isAuthenticated === true ? (\n                    <Component {...props} />\n                ) : (\n                        <Redirect to=\"/\" />\n                    )\n            }\n        />\n    );\n\nconst mapStateToProps = (state) => ({\n    isAuthenticated: state.userReducer.isAuthenticated,\n});\n\nexport default connect(mapStateToProps, null)(PrivateRoute);\n","import React, { useEffect, useState } from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport API from \"../../api/api\";\nimport { toast } from \"react-toastify\";\nimport Swal from 'sweetalert2'\nimport jwt_decode from \"jwt-decode\";\nimport { setCurrentUser } from \"../../redux/actions/action\"\nfunction ChangePassword({ history }) {\n    const [userData, setUserData] = useState({ password: \"\",confirmPassword:\"\",userId:\"\"});\n    const [errors, setErrors] = useState({});\n    const [isActive,setIsActive] = useState(false);\n    const [heading,setHeading] = useState(\"Update Account Password \")\n  \n    useEffect(()=>{\n        //getting jwt token from query params string\n        const query = new URLSearchParams(window.location.search);\n        const uid = query.get('uid')\n        if(uid){\n            try{\n                if(typeof uid == null || typeof uid ==undefined){\n                    throw new Error(\"Invalid Token\")\n                }\n                const decoded = jwt_decode(uid);\n                const currentTime = Date.now() / 1000;\n                if (decoded.exp < currentTime) {\n                    Swal.fire({\n                        title: 'Invalid/Expired  Link ',\n                        text: 'This Link is Invalid/Expired, Please reset your password again !' ,\n                        icon: 'error',\n                        confirmButtonText: 'OK',\n                        confirmButtonColor:'red'\n                      }).then(()=>{\n                         history.push('/forgot')\n                      })\n                }\n                else{\n                  \n                    setUserData(prevState => ({\n                        ...prevState,\n                        userId: decoded.id,\n                    }))\n                   \n                }\n            }\n            catch(error){\n                Swal.fire({\n                    title: 'Invalid/Expired  Link ',\n                    text: 'This Link is Invalid/Expired, Please reset your password again !' ,\n                    icon: 'error',\n                    confirmButtonText: 'OK',\n                    confirmButtonColor:'red'\n                  }).then(()=>{\n                      history.push('/forgot')\n                  })\n            }\n        }\n    },[])\n    function handleChange(event) {\n        const { name, value } = event.target;\n        setUserData(prevData => ({\n            ...prevData,\n            [name]: value\n        }));\n        setErrors(prevData => ({\n            ...prevData,\n            [name]: \"\"\n        }));\n    }\n    function formIsValid() {\n        const {  password,confirmPassword } = userData;\n        const errors = {};\n    \n        if (!password) errors.password = \"*Password is required\";\n        if (!confirmPassword) errors.confirmPassword = \"*Confirm password is required\"\n        setErrors(errors);\n        return Object.keys(errors).length === 0;\n    }\n\n    function handleSave(event) {\n        setIsActive(true)\n        event.preventDefault();\n       \n        if (!formIsValid()) return;\n        API.changePassword(userData)\n            .then((response) => {\n                console.log(\"Change Password Response\",response)\n                setIsActive(false)\n                Swal.fire({\n                    title: 'Change Password! ',\n                    text: 'You Password Has Been Updated Successfully, Please Login Again ! ',\n                    icon: 'success',\n                    confirmButtonText: 'OK',\n                    confirmButtonColor:'#007bff'\n                  }).then(()=>{\n                    setUserData({password: \"\",confirmPassword:\"\" });\n                    history.push(\"/login\");\n              })\n            })\n            .catch((err) => {\n                setIsActive(false)\n                console.log(err.response.data);\n                toast.error()\n                Swal.fire({\n                    title: 'Password Reset ! ',\n                    text: err.response.data.message ,\n                    icon: 'error',\n                    confirmButtonText: 'OK',\n                    confirmButtonColor:'red'\n                  })\n            })\n        // setSaving(true);\n        // saveCourse(course)\n        //     .then(() => {\n        //         toast.success(\"Course saved.\");\n        //         history.push(\"/courses\");\n        //     })\n        //     .catch(error => {\n        //         setSaving(false);\n        //         setErrors({ onSave: error.message });\n        //     });\n    }\n\n    return (\n        <div className=\"register-form\">\n        <center>\n        <div className='loading-spinner'><img width=\"90\" src=\"loading.gif\"/>  </div>: <div className='loading-spinner'></div>\n              <br/>\n            <h3>Loggin In, Please Wait . . . . </h3>\n            <hr/>\n            <br/>\n          \n        </center>\n             \n        </div>\n    )\n}\n\nexport default ChangePassword;\n","import React, { useState,useEffect } from 'react';\nimport API from \"../../api/api\";\nimport { toast } from \"react-toastify\";\nimport Swal from 'sweetalert2'\nimport jwt_decode from \"jwt-decode\";\nfunction VerifyEmail({ history }) {\n\n    const [isActive,setIsActive] = useState(true);\n    useEffect(()=>{\n        //getting jwt token from query params string\n        const query = new URLSearchParams(window.location.search);\n        const uid = query.get('uid')\n        if(uid){\n            try{\n                if(typeof uid == null || typeof uid ==undefined){\n                    throw new Error(\"Invalid Token\")\n                }\n                const decoded = jwt_decode(uid);\n                 API.verifyEmail({userId:decoded.id}).then(()=>{\n                    setIsActive(false)\n                    Swal.fire({\n                        title: 'Email Verified !',\n                        text: 'Email Verified Successfully, Login to Continue ! ',\n                        icon: 'success',\n                        confirmButtonText: 'Login',\n                        confirmButtonColor:'#007bff'\n                      }).then(()=>{\n                          history.push('/login')\n                      })\n                 })\n                 .catch((error)=>{\n                    Swal.fire({\n                        title: 'Verification Failed !',\n                        text: error.message ,\n                        icon: 'error',\n                        confirmButtonText: 'OK',\n                        confirmButtonColor:'red'\n                      }).then(()=>{\n                          history.push('/login')\n                      })\n                 })\n            }\n            catch(error){\n                Swal.fire({\n                    title: 'Verification Failed ! ',\n                    text: 'Verification Link is Invalid/Expired !' ,\n                    icon: 'error',\n                    confirmButtonText: 'OK',\n                    confirmButtonColor:'red'\n                  }).then(()=>{\n                      history.push('/login')\n                  })\n            }\n        }\n    },[])\n    return (\n        <div className=\"register-form\">\n              {isActive ?  <div className='loading-spinner'> <img width=\"90\" src=\"loading.gif\"/>  </div>: <div className='loading-spinner'></div>}\n            <br/>\n            <h3><center>Verifying Email . . . . </center></h3>\n            <hr/>\n            <br/>\n        </div>\n    )\n}\n\nexport default VerifyEmail;\n","import React, { useEffect } from \"react\";\nimport { connect } from 'react-redux';\nimport { loadWallet } from \"../../redux/actions/action\";\nimport { Navbar, Nav } from 'react-bootstrap';\nimport { NavLink } from \"react-router-dom\";\nimport Swal from 'sweetalert2'\nfunction Footer({\n    userProfile,\n    walletUpdated,\n    isAuthenticated\n}) {\n    useEffect(()=>{\n        // alert(\"LOADING WALLET\")\n        // loadWallet({userId:\"62343eb650765d7a33191ba9\"})\n        // alert(JSON.stringify(userProfile))\n    },[])\n\n  return (\n    <div>\n         <section>\n    <div className=\"row\">\n                <div className=\"col-12\">\n                    <div className=\"card\">\n                        <div className=\"card-header\">\n                            <h4 style={{textAlign:'center'}}>\n                                \n                                {/* {userProfile?.type == \"customer\" ?\" Wallet Address :  \"+userProfile?.walletAddress : \"Admin Account \"} */}\n                                \n                                </h4>\n                           \n                        </div>\n                       \n                    </div>\n                </div>\n            </div>\n    </section>\n    </div>\n  )\n}\nconst mapDispatchToProps = {\n    loadWallet: loadWallet,\n  \n};\nconst mapStateToProps = (state) => ({\n    isAuthenticated:state.userReducer.isAuthenticated,\n    userProfile:state.userReducer.user,\n    walletUpdated:state.userReducer.isWalletLoaded,\n});\n\nexport default connect(mapStateToProps,mapDispatchToProps)(Footer);\n\n\n","import React, { useEffect, useState } from 'react';\nimport Header from '../common/Header'\nimport API from '../../api/api';\nimport {Container,Row,Col,Card,Button} from 'react-bootstrap'\nimport { connect } from 'react-redux';\nimport { getProducts } from \"../../redux/actions/action\";\nimport Sidebar from '../common/Sidebar';\nimport Swal from 'sweetalert2'\nimport jwt_decode from \"jwt-decode\";\nimport Footer from '../common/Footer';\nconst Product = ({\n    getProducts,\n    history,\n    productsData,\n    productFound,\n    userProfile\n}) =>{\n    const [orderData, setOrderData] = useState({ name: \"\", email: \"\", password: \"\", confirmPassword: \"\" });\n    const [products,setProducts] = useState([])\n    const [isLoaded,setisLoaded] = useState(false)\n    useEffect(()=>{\n        getProducts()\n    },[])\n\n    function placeOrder(product){\n        var tok = localStorage.getItem(\"jwtToken\");\n         const decoded = jwt_decode(tok);\n        if(decoded.type==\"admin\"){\n            alert(\"Admin Account be used for purchases \")\n            return \"\"\n            \n        }\n        const swalWithBootstrapButtons = Swal.mixin({\n            customClass: {\n              confirmButton: 'btn btn-success',\n              cancelButton: 'btn btn-danger'\n            },\n            buttonsStyling: true\n          })\n          \n          swalWithBootstrapButtons.fire({\n            title: 'Confirm Order  ? ',\n            text: \"Are you sure you want to Place Order  ?\",\n            icon: 'info',\n            showCancelButton: true,\n            confirmButtonText: 'Yes, Confirm Purchase ',\n            cancelButtonText: 'No, Cancel ! ',\n            reverseButtons: false\n          }).then((result) => {\n            if (result.isConfirmed) {\n                \n                Swal.fire({\n                    title: 'Processing! ',\n                    html: 'Processing Your Order , Please wait...',\n                    allowEscapeKey: false,\n                    allowOutsideClick: false,\n                    didOpen: () => {\n                      Swal.showLoading()\n                    }\n                  });\n                  \n                 \n                var orderData={\n                    userId:decoded.id,\n                    product:product,\n                }\n                \n            \n\n                API.placeOrder(orderData)\n                .then((response)=>{\n                   \n                    if(response.insuffecientBalance){\n                        swalWithBootstrapButtons.fire(\n                            'Failed ! ',\n                           \"Insuffecient Wallet Balance\",\n                            'error'\n                          )\n                    }\n                    else{\n                        swalWithBootstrapButtons.fire(\n                            'Confirmed !',\n                            'Order Placed, We have recieved your order ! ',\n                            'success'\n                          )\n                    }\n                    \n                })\n                .catch((err)=>{\n                    if(err.message == \"Request failed with status code 433\"){\n                        swalWithBootstrapButtons.fire(\n                            'Failed ! ',\n                         \"Insuffecient Wallet Balance \",\n                            'error'\n                          )\n                    }\n                    else{\n                        swalWithBootstrapButtons.fire(\n                            'Failed ! ',\n                         err.message,\n                            'error'\n                          )\n                    }\n                    \n                })\n            } \n          })\n    }\n    function viewProduct(product){\n        var tok = localStorage.getItem(\"jwtToken\");\n        const decoded = jwt_decode(tok);\n       \n        var status =  product.quantity > 0 ? '<span class=\"badge bg-success\">In Stock</span>' :' <span class=\"badge bg-danger\">Out of Stock</span>'\n        var keywords = product.keywords.map((keyword,index)=>{\n            return('<span class=\"badge bg-light-primary\">'+keyword+'</span>')\n        })\n        Swal.fire({\n            title: '<strong>Product Details</strong>',\n            html:'<div class=\"row\"><div class=\"col-lg-12\">'+\n                  ' <img width=\"250\" class=\"img-fluid\" src='+product.image+' alt=\"Product Image\"  /><br/><br/>'+\n                 '</div>'+\n                  '<div class=\"col-lg-12\">'+\n                 \n                 '  <table class=\"table table-bordered mb-0\">'+\n                 '<tr><td class=\"text-bold-500\"><strong>Product</strong></td><td>'+product.title+'</td></tr>'+\n                   '<tr><td class=\"text-bold-500\"><strong>Description</strong></td>'+\n                  '   <td>'+product.description+'</td></tr>'+\n                '     <tr>'+\n                '         <td class=\"text-bold-500\"><strong>Price</strong></td>'+\n                '        <td>'+product.currency[0].symbol+' '+product.price+'</td>'+\n                '    </tr>'+\n                '     <tr>'+\n                '         <td class=\"text-bold-500\"><strong>Brand</strong></td>'+\n                '        <td>'+product.brand+'</td>'+\n                '    </tr>'+      \n                \n                '     <tr>'+\n                '         <td class=\"text-bold-500\"><strong>Keywords</strong></td>'+\n                '        <td>'+\n                             keywords\n                         +'</td>'+\n                '    </tr>'+  \n                \n                '     <tr>'+\n                '         <td class=\"text-bold-500\"><strong>Status</strong></td>'+\n                '        <td>'+\n                             status\n                         +'</td>'+\n                '    </tr>'+ \n                    \n                '  </div>'+\n                  '</div>',\n\n            showCloseButton: true,\n            width:'40rem',\n            showCancelButton: true,\n            focusConfirm: false,\n            confirmButtonText:\n              'Buy Now',\n            confirmButtonAriaLabel: 'Buy Now',\n            cancelButtonText:\n              'Cancel',\n            cancelButtonAriaLabel: 'Cancel'\n          }).then((value)=>{\n              if(value.isConfirmed){\n                  //confirm Order \n                  placeOrder(product)\n              }\n          })\n    }\n\n    return (<>\n\n    {/* <Header/> */}\n    <Sidebar/>\n      \n    <div id=\"main\">\n        <header className=\"mb-3\">\n            <a href=\"#\" className=\"burger-btn d-block d-xl-none\">\n                <i className=\"bi bi-justify fs-3\"></i>\n            </a>\n        </header>\n<div className=\"page-heading\">\n<h3>Buy Products</h3>\n</div>\n<hr/>\n<div className=\"page-content\">\n    <section className=\"row\">\n        <div className=\"col-12 col-lg-12\">\n            <div className=\"row\">\n\n            {productFound ? productsData.data.products.map((product,index) =>\n                <div key={index} className=\"col-6 col-lg-3 col-md-6\">\n                    <div class=\"card\">\n                        <div class=\"card-content\">\n                            <img class=\"card-img-top img-fluid\" src={product.image} alt=\"Card image cap\" style={{height: \"10rem\",contain:'cover'}} />\n                            <div class=\"card-body\">\n                                <h4 class=\"card-title\">{product.title}</h4>\n                                <p class=\"card-text\">\n                                {product.description}\n                                </p>\n                                <p class=\"card-text\">\n                                Status : <span class=\"badge bg-success\">In Stock</span>\n                                {/* <span class=\"badge bg-danger\">Sold Out</span> */}\n                                </p>\n                                <div >\n                                <h4 style={{float:'left'}} class=\"card-title\">{product.currency[0].symbol} {product.price}</h4>\n                                    <button style={{width:'100px',float:'right'}} \n                                    onClick={()=>{viewProduct(product)}}\n                                    class=\"btn btn-sm btn-primary\"><b>  <i className=\"bi bi-cart-check\"></i> Buy Now</b></button>\n                                </div><br/>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n             ) :''}\n\n            </div>\n            \n           \n        </div>\n\n    </section>\n\n   \n</div>\n<Footer/>\n           \n        </div>\n          \n        {/* <Container>\n            <h2>Products </h2>\n            <hr/>\n            <Row xs={6} md={3} className=\"g-2\">\n                {productFound ? productsData.data.products.map((product,index) =>\n          \n                <Col key={index}>\n                <Card>\n                    <Card.Img  width=\"20\" variant=\"top\" src={product.image} />\n                    <Card.Body>\n                    <Card.Title>{product.title}</Card.Title>\n                    <Card.Text>\n                      {product.description}\n                    </Card.Text>\n                    </Card.Body>\n                    <Card.Footer>\n                    <Row style={{width:'100%',marginTop:'10px'}}>\n                        <Col> <Button style={{float:'left !important'}} variant=\"primary\">Buy Now</Button></Col>\n                        <Col> <p style={{fontWeight:'bold',textAlign:'right'}} className='product-price'>{product.currency[0].symbol} {product.price}</p></Col>\n                       \n                       \n                    </Row>\n                    </Card.Footer>\n                </Card>\n                </Col>\n            ) :''}\n            </Row>\n        </Container> */}\n      \n        </>\n    )\n}\nconst mapDispatchToProps = {\n    getProducts: getProducts,\n};\nconst mapStateToProps = (state) => ({\n    productsData:state.productsReducer.products,\n    productFound: state.productsReducer.productsFound,\n    userProfile:state.userReducer.user,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Product);\n","import React from 'react'\nimport Sidebar from '../common/Sidebar'\nfunction Dashboard() {\n  return (\n    <div id=\"app\">\n        <Sidebar/>\n        \n        <div id=\"main\">\n        <header className=\"mb-3\">\n            <a href=\"#\" className=\"burger-btn d-block d-xl-none\">\n                <i className=\"bi bi-justify fs-3\"></i>\n            </a>\n        </header>\n<div className=\"page-heading\">\n<h3>Dashboard</h3>\n</div>\n<div className=\"page-content\">\n    <section className=\"row\">\n        <div className=\"col-12 col-lg-12\">\n            <div className=\"row\">\n                <div className=\"col-6 col-lg-4 col-md-6\">\n                    <div className=\"card\">\n                        <div className=\"card-body px-3 py-4-5\">\n                            <div className=\"row\">\n                                <div className=\"col-md-4\">\n                                    <div className=\"stats-icon purple\">\n                                        <i className=\"iconly-boldShow\"></i>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-8\">\n                                    <h6 className=\"text-muted font-semibold\">Wallet Balance</h6>\n                                    <h6 className=\"font-extrabold mb-0\">112</h6>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"col-6 col-lg-4 col-md-6\">\n                    <div className=\"card\">\n                        <div className=\"card-body px-3 py-4-5\">\n                            <div className=\"row\">\n                                <div className=\"col-md-4\">\n                                    <div className=\"stats-icon blue\">\n                                        <i className=\"iconly-boldProfile\"></i>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-8\">\n                                    <h6 className=\"text-muted font-semibold\">Orders</h6>\n                                    <h6 className=\"font-extrabold mb-0\">4</h6>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"col-6 col-lg-4 col-md-6\">\n                    <div className=\"card\">\n                        <div className=\"card-body px-3 py-4-5\">\n                            <div className=\"row\">\n                                <div className=\"col-md-4\">\n                                    <div className=\"stats-icon green\">\n                                        <i className=\"iconly-boldAdd-User\"></i>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-8\">\n                                    <h6 className=\"text-muted font-semibold\">Transactions</h6>\n                                    <h6 className=\"font-extrabold mb-0\">5</h6>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                \n            </div>\n           \n          \n        </div>\n       \n    </section>\n</div>\n\n           \n        </div>\n    </div>\n  )\n}\n\nexport default Dashboard","import React from 'react'\nimport Dashboard from '../dashboard/Dashboard'\nimport Sidebar from '../common/Sidebar'\nfunction Main() {\n  return (\n    <div>\n        <Sidebar/>\n        <Dashboard/>\n    </div>\n  )\n}\n\nexport default Main","import React, { useEffect, useState } from 'react';\nimport Header from '../common/Header'\nimport API from '../../api/api';\nimport {Container,Row,Col,Card,Button} from 'react-bootstrap'\nimport { connect } from 'react-redux';\nimport { getOrders } from \"../../redux/actions/action\";\nimport Sidebar from '../common/Sidebar';\nimport Swal from 'sweetalert2'\nimport jwt_decode from \"jwt-decode\";\nimport Footer from '../common/Footer';\nconst Orders = ({\n    getOrders,\n    history,\n    ordersData,\n    ordersFound,\n    userProfile,\n    isAuthenticated\n}) =>{\n    const [orderData, setOrderData] = useState({ name: \"\", email: \"\", password: \"\", confirmPassword: \"\" });\n    const [products,setProducts] = useState([])\n    const [isLoaded,setisLoaded] = useState(false)\n    useEffect(()=>{\n       if(isAuthenticated && !isLoaded){\n          \n        var tok = localStorage.getItem(\"jwtToken\");\n        const decoded = jwt_decode(tok);\n        if(decoded.emailVerified){\n            var userInfo={userId:decoded.id}\n            getOrders(userInfo)\n            setisLoaded(true)\n        }\n       }\n\n    },[isAuthenticated])\n\n    function refundOrder(order){\n        var tok = localStorage.getItem(\"jwtToken\");\n         const decoded = jwt_decode(tok);\n       \n        const swalWithBootstrapButtons = Swal.mixin({\n            customClass: {\n              confirmButton: 'btn btn-success',\n              cancelButton: 'btn btn-danger'\n            },\n            buttonsStyling: true\n          })\n          \n          swalWithBootstrapButtons.fire({\n            title: 'Confirm Refund  ? ',\n            text: \"Are you sure you want to Refund Order  ?\",\n            icon: 'info',\n            showCancelButton: true,\n            confirmButtonText: 'Yes, Confirm  ',\n            cancelButtonText: 'No, Cancel ! ',\n            reverseButtons: false\n          }).then((result) => {\n            if (result.isConfirmed) {\n                \n                Swal.fire({\n                    title: 'Processing! ',\n                    html: 'Processing  , Please wait...',\n                    allowEscapeKey: false,\n                    allowOutsideClick: false,\n                    didOpen: () => {\n                      Swal.showLoading()\n                    }\n                  });\n                  \n                var orderData={\n                    adminId:decoded.id,\n                    orderId:order._id,\n                }\n                API.refundOrder(orderData)\n                .then((response)=>{\n                    var userInfo={userId:decoded.id}\n                    getOrders(userInfo)\n                    swalWithBootstrapButtons.fire(\n                        'Order Refunded',\n                        'Order Refunded, Amount credited to user Wallet ',\n                        'success'\n                      )\n                })\n                .catch((err)=>{\n                    swalWithBootstrapButtons.fire(\n                        'Failed ! ',\n                       err.message,\n                        'error'\n                      )\n                })\n            } \n          })\n    }\n    return (<>\n\n    {/* <Header/> */}\n    <Sidebar/>\n      \n    <div id=\"main\">\n        <header className=\"mb-3\">\n            <a href=\"#\" className=\"burger-btn d-block d-xl-none\">\n                <i className=\"bi bi-justify fs-3\"></i>\n            </a>\n        </header>\n<div className=\"page-heading\">\n<h3>My Orders </h3>\n</div>\n<hr/>\n<div className=\"page-content\">\n    <section className=\"row\">\n        <div className=\"col-12 col-lg-12\">\n            <div className=\"row\">\n            <div class=\"card\">\n            <div class=\"table-responsive\">\n                <table class=\"table table-lg\">\n                    <thead>\n                        <tr>\n                            <th>Order ID</th>\n                            <th>Product Name</th>\n                            <th>Amount</th>\n                            <th>Order Status</th>\n                            <th>Action</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                        ordersFound ? ordersData?.data?.orders.map((ord,index)=>(\n                            <tr key={index}>\n                                <td className=\"text-bold-500\">{ord?._id}</td>\n                                <td>{ord?.productDetails[0]?.title}</td>\n                                {/* <td className=\"text-bold-500\">{JSON.stringify(ord?.amount).replace(/\\D/g,'')}</td> */}\n                                <td>{ord?.productDetails[0]?.price}</td>\n                                <td className=\"text-bold-500\">{ord?.status}</td>\n                                <td className=\"text-bold-500\">{ord?.status != \"REFUNDED\" && userProfile.type == \"admin\" ? <button onClick={()=> refundOrder(ord)} className='btn btn-primary btn-sm'>Refund</button> : \" - \"}</td>\n                            </tr>\n                        )):\"Loading Orders . . . . \"\n                        }\n                        \n                    </tbody>\n                </table>\n             </div>\n</div>\n            </div>\n            \n        </div>\n\n    </section>\n\n   \n</div>\n<Footer/>\n           \n        </div>\n          \n       \n      \n        </>\n    )\n}\nconst mapDispatchToProps = {\n    getOrders: getOrders,\n};\nconst mapStateToProps = (state) => ({\n    ordersData:state.ordersReducer.orders,\n    ordersFound:state.ordersReducer.ordersFound,\n    userProfile:state.userReducer.user,\n    isAuthenticated:state.userReducer.isAuthenticated\n    \n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Orders);\n","import React, { useEffect, useState } from 'react';\nimport Header from '../common/Header'\nimport API from '../../api/api';\nimport {Container,Row,Col,Card,Button} from 'react-bootstrap'\nimport { connect } from 'react-redux';\nimport { getWallet1 } from \"../../redux/actions/action\";\nimport Sidebar from '../common/Sidebar';\nimport Swal from 'sweetalert2'\nimport Footer from '../common/Footer';\nimport api from '../../api/api';\nimport LoadingOverlay from 'react-loading-overlay';\nimport jwt_decode from \"jwt-decode\";\nconst Wallet = ({\n    getOrders,\n    history,\n    wallet1,\n    wallet1Loaded,\n    userProfile,\n    isAuthenticated\n}) =>{\n    const [walletData, setWalletData] = useState([]);\n    const [walletTableData,setWalletTableData] = useState([])\n    const [balance,setBalance] = useState(0)\n    const [products,setProducts] = useState([])\n    const [isLoaded,setisLoaded] = useState(false)\n    const [rowCredit,setRowCredit] = useState(0)\n    const[rowDebit,setRowDebit] = useState(0)\n    const [prevBalance,setPrevBalance] = useState(0)\n    const [currencies,setCurrencies] = useState([])\n    const [selectedCurrency,setSelectedCurrency] = useState(\"\")\n    const[loadingData,setLoadingData] = useState(true)\n    const [selectedUserId,setSelectedUserId] = useState(\"\")\n    \n    useEffect(()=>{\n        if(isAuthenticated && !isLoaded){\n           \n         var tok = localStorage.getItem(\"jwtToken\");\n         const decoded = jwt_decode(tok);\n         if(decoded.emailVerified){\n             var userInfo={userId:decoded.id}\n             getWallet1(userInfo)\n             setisLoaded(true)\n         }\n        }\n     },[wallet1Loaded,isAuthenticated])\n     useEffect(()=>{\n        var tok = localStorage.getItem(\"jwtToken\");\n        const decoded = jwt_decode(tok);\n        setSelectedUserId(decoded.id)\n         loadCurrencies()\n        loadData()\n      \n     },[])\n\n     useEffect(()=>{\n         \n         loadData()\n     },[selectedCurrency,selectedUserId])\n\n     function loadCurrencies(){\n        setLoadingData(true)\n        console.log(\"Fetching Currencies \")\n        API.getCurrencies().then((response)=>{\n            console.log(\"Currecneis response\",response.data.data)\n            setCurrencies(response.data.data)\n            setLoadingData(false)\n        })\n     }\n     function loadData(){\n        setisLoaded(false)\n        setLoadingData(true)\n        var tok = localStorage.getItem(\"jwtToken\");\n        const decoded = jwt_decode(tok);\n        var userInfo={userId:selectedUserId}\n        console.log(\"Currencyt Updated \")\n         if(selectedCurrency!=\"\")\n         {\n             console.log(\"Currencyt Updated \")\n            userInfo.currencyId = selectedCurrency\n         }\n       api.getWallet(userInfo).then((response)=>{\n           var tempTableData = []\n           console.log(\"Balance Sheet Data \",response)\n           var rowBalance = 0\n           var prevBalance = 0\n           var rowCredit= 0\n           var rowDebit = 0\n           var credit = 0\n           var debit = 0\n           response.data.result.map((entry,index)=>{\n              \n               prevBalance+= entry.credit - entry.debit\n               tempTableData.push({\n                   _id:entry._id,\n                   credit:entry.credit,\n                   debit:entry.debit,\n                   rowBalance:prevBalance,\n                   currencyId:entry.currencyId,\n                   description:entry.description,\n                   userId:entry.userId\n               })\n                credit+=entry.credit\n                debit+=entry.debit\n                //alert(prevBalance)\n           })\n        var balance = credit - debit\n        setWalletTableData(tempTableData)\n        setBalance(balance)\n        setWalletData(response.data)\n        setLoadingData(false)\n      \n        setisLoaded(true)\n       })\n       .catch((error)=>{\n           console.log(error)\n       })\n     }\n     function loadUserTransactions(){\n\n     }\n     function addBalance(){\n         var curr = currencies.map((currency,index)=>{\n             return '<option value='+currency._id+'>'+currency.currency+ '( ' +currency.symbol+ ' ) </option>'\n         })\n        const swalWithBootstrapButtons = Swal.mixin({\n            customClass: {\n              confirmButton: 'btn btn-success',\n              cancelButton: 'btn btn-danger'\n            },\n            buttonsStyling: true\n          })\n          \n          swalWithBootstrapButtons.fire({\n            title: 'Enter Amount ! ',\n            icon: 'info',\n            html:'<select class=\"form-select\" id=\"currencyId\"><option disbaled selected >--Choose Wallet --</option>'+curr+'</select><br/><input placeholder=\"Enter Amount \" class=\"form-control\" type=\"number\" id=\"amount\" />',\n            showCancelButton: true,\n            confirmButtonText: 'Confirm  ',\n            cancelButtonText: 'Cancel ',\n            reverseButtons: false,\n            preConfirm: () => {\n                return [\n                  document.getElementById('currencyId').value,\n                  document.getElementById('amount').value,\n                ]\n              }\n          }).then((result) => {\n          \n            if (result.isConfirmed) {\n                Swal.fire({\n                    title: 'Processing ! ',\n                    html: 'Adding Balance to Wallet  , Please wait...',\n                    allowEscapeKey: false,\n                    allowOutsideClick: false,\n                    didOpen: () => {\n                      Swal.showLoading()\n                    }\n                  });\n                var user={\n                    currencyId:result.value[0],\n                    userId:userProfile.id,\n                    amount:result.value[1]\n                }\n                setLoadingData(true)\n                API.addBalance(user)\n                .then((response)=>{\n                    setLoadingData(false)\n                  loadData()\n                    swalWithBootstrapButtons.fire(\n                        'Success !',\n                        'Balance Added to Wallet  Successfully !  ',\n                        'success'\n                      )\n                })\n                .catch((err)=>{\n                    swalWithBootstrapButtons.fire(\n                        'Failed ! ',\n                       err.message,\n                        'error'\n                      )\n                })\n            } \n          })\n    }\n    return (<>\n\n    {/* <Header/> */}\n    <Sidebar/>\n      \n    <div id=\"main\">\n        <header className=\"mb-3\">\n            <a href=\"#\" className=\"burger-btn d-block d-xl-none\">\n                <i className=\"bi bi-justify fs-3\"></i>\n            </a>\n        </header>\n<div className=\"page-heading\">\n<h3>Wallet Details </h3>\n</div>\n<hr/>\n<LoadingOverlay\n  active={loadingData}\n  spinner\n  text='Fetching  Data . . . '\n  >\n<div className=\"page-content\">\n    <section className=\"row\">\n        <div className='col-12'>\n            <div className='card'>\n            <h5 style={{textAlign:'left',margin:'10px'}}> <select style={{width:'300px',float:'left'}} onChange={(e)=>{ setSelectedCurrency(e.target.value) ;}} class=\"form-select\" id=\"basicSelect\">\n            <option value=\"\">----- All Wallets ----- </option>\n          {currencies.map((curr,index)=>{\n              return(\n                  <option  value={curr._id}>{curr.currency} ( {curr.symbol} )</option>\n              )\n          })}\n        </select> \n        {userProfile.type==\"admin\" && userProfile.id != selectedUserId ? <button style={{marginLeft:'10px',cursor:'normal'}} type=\"button\" class=\"btn btn-primary\">\n                                {selectedUserId} <span style={{cursor:'pointer'}} onClick={()=>setSelectedUserId(userProfile.id)} class=\"badge bg-transparent\">X </span>\n                            </button> :\"\"}\n        {userProfile?.type ==\"customer\" ? <button style={{float:\"right\"}} className=\"btn btn-primary btn-sm\" onClick={()=>addBalance()}>Add Balance </button> : \"\"}\n        </h5>\n          \n           \n            </div>\n        </div>\n        \n        <div className=\"col-12 col-lg-12\">\n            <div className=\"row\">\n            <div class=\"card\">\n                <br/>\n           \n           \n            <div class=\"table-responsive\">\n                <table class=\"table table-lg\">\n                    <thead>\n                        <tr>\n                            <th>Transaction ID</th>\n                            {userProfile.type == \"admin\" ? <th>User ID</th> : \"\"}\n                            \n                            <th>Description</th>\n                            <th>Wallet </th>\n                            <th>Debit</th>\n                            <th>Credit</th>\n                           {selectedCurrency != \"\" ? <th>Balance </th> : \"\"} \n                         \n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                        \n                        isLoaded ? walletTableData?.reverse().map((entry,index)=>{ \n                            var rowBalance = 0\n                            var rowCredit = 0\n                            var rowDebit = 0\n                            rowCredit+= entry.credit\n                            rowDebit+= entry.debit\n                            rowBalance = rowCredit - rowDebit\n                 \n                            return (\n                            <tr key={index}>\n                                 <td className=\"text-bold-500\">{entry._id}</td>\n                                 {userProfile.type == \"admin\" ? <td onClick={()=> setSelectedUserId(entry.userId)} style={{cursor:'pointer',textDecoration:'underline'}} className=\"text-bold-500\"><b>{entry.userId}</b></td>: \"\"}\n                                 <td>{entry.description}</td>\n                                 <td> {currencies.find(e=>e._id == entry.currencyId)?.currency} </td>\n                                 \n\n                                 <td className=\"text-bold-500\"> {entry.debit != null ? <span class=\"badge bg-light-danger\">{currencies.find(e=>e._id == entry.currencyId)?.symbol} {entry.debit}</span> : \" - \"}</td>\n                                 <td className=\"text-bold-500\"> {entry.credit != null ? <span class=\"badge bg-light-success\"> {currencies.find(e=>e._id == entry.currencyId)?.symbol} {entry.credit}</span> : \" - \"}</td>\n                                 {selectedCurrency != \"\" ? <th>{entry.rowBalance} </th> : \"\"} \n                            \n                            \n                              \n                               \n                            </tr>\n                        )}):\"\"\n                        }\n                        \n                    </tbody>\n                </table>\n             </div>\n</div>\n            </div>\n            \n           \n        </div>\n\n    </section>\n\n   \n</div>\n</LoadingOverlay>\n<Footer/>\n           \n</div>\n          \n      \n      \n        </>\n    )\n}\nconst mapDispatchToProps = {\n    getWallet1: getWallet1,\n};\nconst mapStateToProps = (state) => ({\n    wallet1:state.userReducer.wallet1,\n    wallet1Loaded:state.userReducer.isWallet1Loaded,\n    userProfile:state.userReducer.user,\n    isAuthenticated:state.userReducer.isAuthenticated\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Wallet);\n","import React, { useEffect, useState } from 'react';\nimport Header from '../common/Header'\nimport API from '../../api/api';\nimport {Container,Row,Col,Card,Button} from 'react-bootstrap'\nimport { connect } from 'react-redux';\nimport { getCustomers } from \"../../redux/actions/action\";\nimport Sidebar from '../common/Sidebar';\nimport Swal from 'sweetalert2'\nimport jwt_decode from \"jwt-decode\";\nimport Footer from '../common/Footer';\n\nconst Customers = ({\n    getCustomers,\n    history,\n    customersData,\n    customersFound,\n    userProfile,\n    isAuthenticated\n}) =>{\n    const [isLoaded,setisLoaded] = useState(false)\n    useEffect(()=>{\n       if(isAuthenticated && !isLoaded){\n        var tok = localStorage.getItem(\"jwtToken\");\n        const decoded = jwt_decode(tok);\n        if(decoded.emailVerified){\n            var userInfo={adminId:decoded.id}\n            getCustomers(userInfo)\n            if(customersFound){\n                setisLoaded(true)\n            }\n         }\n       }\n\n    },[isAuthenticated,customersFound])\n\n    function addBalance(customer){\n        const swalWithBootstrapButtons = Swal.mixin({\n            customClass: {\n              confirmButton: 'btn btn-success',\n              cancelButton: 'btn btn-danger'\n            },\n            buttonsStyling: true\n          })\n          \n          swalWithBootstrapButtons.fire({\n            title: 'Enter Amount ! ',\n         \n            icon: 'info',\n            showCancelButton: true,\n            confirmButtonText: 'Confirm  ',\n            cancelButtonText: 'Cancel ',\n            reverseButtons: false,\n            inputPlaceholder:\"Enter Amount to load into Wallet\",\n            input:\"number\",\n          }).then((result) => {\n            \n            if (result.isConfirmed) {\n                Swal.fire({\n                    title: 'Processing ! ',\n                    html: 'Adding Balance to Wallet  , Please wait...',\n                    allowEscapeKey: false,\n                    allowOutsideClick: false,\n                    didOpen: () => {\n                      Swal.showLoading()\n                    }\n                  });\n                var user={\n                    currencyId:\"6238bf6cf8b52ba80db9ae22\",\n                    userId:customer._id,\n                    amount:result.value\n                }\n                API.addBalance(user)\n                .then((response)=>{\n                    getCustomers({userId:user.adminId})\n                    swalWithBootstrapButtons.fire(\n                        'Success !',\n                        'Balance Added to Wallet  Successfully !  ',\n                        'success'\n                      )\n                })\n                .catch((err)=>{\n                    swalWithBootstrapButtons.fire(\n                        'Failed ! ',\n                       err.message,\n                        'error'\n                      )\n                })\n            } \n          })\n    }\n\n    function deleteUser(customer){\n        const swalWithBootstrapButtons = Swal.mixin({\n            customClass: {\n              confirmButton: 'btn btn-success',\n              cancelButton: 'btn btn-danger'\n            },\n            buttonsStyling: true\n          })\n          \n          swalWithBootstrapButtons.fire({\n            title: 'Confirm  ? ',\n            text: \"Are you sure you want to Delete User ?\",\n            icon: 'info',\n            showCancelButton: true,\n            confirmButtonText: 'Yes, Delete ',\n            cancelButtonText: 'No, Cancel ! ',\n            reverseButtons: false\n          }).then((result) => {\n            if (result.isConfirmed) {\n                Swal.fire({\n                    title: 'Processing ! ',\n                    html: 'Deleting User , Please wait...',\n                    allowEscapeKey: false,\n                    allowOutsideClick: false,\n                    didOpen: () => {\n                      Swal.showLoading()\n                    }\n                  });\n                var user={\n                 \n                    adminId:userProfile.id,\n                    userId:customer._id\n                }\n                API.deleteUser(user)\n                .then((response)=>{\n                    getCustomers({adminId:user.adminId})\n                    swalWithBootstrapButtons.fire(\n                        'Deleted !',\n                        'User Deleted Successfully !  ',\n                        'success'\n                      )\n                })\n                .catch((err)=>{\n                    swalWithBootstrapButtons.fire(\n                        'Failed ! ',\n                       err.message,\n                        'error'\n                      )\n                })\n            } \n          })\n    }\n\n    return (<>\n\n    {/* <Header/> */}\n    <Sidebar/>\n      \n    <div id=\"main\">\n        <header className=\"mb-3\">\n            <a href=\"#\" className=\"burger-btn d-block d-xl-none\">\n                <i className=\"bi bi-justify fs-3\"></i>\n            </a>\n        </header>\n<div className=\"page-heading\">\n<h3>Customers </h3>\n</div>\n<hr/>\n<div className=\"page-content\">\n    <section className=\"row\">\n        <div className=\"col-12 col-lg-12\">\n            <div className=\"row\">\n            <div class=\"card\">\n            <div class=\"table-responsive\">\n                <table class=\"table table-lg\">\n                    <thead>\n                        <tr>\n                            <th>User ID</th>\n                            <th>Name</th>\n                            <th>Email</th>\n                            <th>Email Verified</th>\n                            <th>Wallet Address</th>\n                            <th>Action</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                        customersFound ? customersData?.customers.map((customer,index)=>(\n                            <tr key={index}>\n                                <td className=\"text-bold-500\">{customer._id}</td>\n                                <td>{customer.name}</td>\n                                <td>{customer.email}</td>\n                                <td>{customer.emailVerified ? \"Yes\" : \"NO\"}</td>\n                                <td className=\"text-bold-500\">{customer.walletAddress}</td>\n                                <td className=\"text-bold-500\">\n                                 <button onClick={()=>deleteUser(customer)} class=\"btn btn-danger btn-sm\"> Delete user</button>\n                                {/* <button onClick={()=>addBalance(customer)} class=\"btn btn-primary btn-sm\"> Add Balance </button> -  <button onClick={()=>deleteUser(customer)} class=\"btn btn-danger btn-sm\"> Delete user</button>\n                                */}\n                                </td>\n                            </tr>\n                        )):\"Loading Data . . . . \"\n                        }\n                        \n                    </tbody>\n                </table>\n             </div>\n</div>\n            </div>\n            \n        </div>\n\n    </section>\n\n   \n</div>\n<Footer/>\n           \n        </div>\n          \n       \n      \n        </>\n    )\n}\nconst mapDispatchToProps = {\n    getCustomers: getCustomers,\n};\nconst mapStateToProps = (state) => ({\n    customersData:state.userReducer.customersData,\n    customersFound:state.userReducer.customersFound,\n    userProfile:state.userReducer.user,\n    isAuthenticated:state.userReducer.isAuthenticated\n    \n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Customers);\n","import React, { useEffect } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport jwt_decode from \"jwt-decode\";\nimport setAuthToken from \"../utils/setAuthToken\";\nimport HomePage from \"./home/HomePage\";\nimport Header from \"./common/Header\";\nimport PageNotFound from \"./PageNotFound\";\nimport Register from \"./register/Register\";\nimport Login from \"./login/Login\";\nimport ForgotPassword from './forgot/Forgot'\nimport News from \"./news/News\";\nimport Wallet from \"./wallet/Wallet.js\";\nimport ChangePassword from \"./changePassword/ChangePassword\";\nimport PrivateRoute from \"./PrivateRoute\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { connect } from 'react-redux';\nimport { setCurrentUser, logOutUser } from \"../redux/actions/action\";\nimport PasswordLess from '../components/changePassword/PasswordLess'\nimport VerifyEmail from \"./verifyEmail/verifyEmail\";\nimport Products from \"./products/products\";\nimport Main from \"./MainLayout/Main\";\nimport Dashboard from \"./dashboard/Dashboard\";\nimport Orders from \"./orders/Orders\";\nimport Transactions from \"./transactions.js/Transactions\"\nimport Customers from \"./customers/Customers\";\nconst App = ({\n    setCurrentUser,\n    logOutUser\n}) => {\n    useEffect(() => {\n        if (localStorage.jwtToken) {\n            // Set auth token header auth\n            const token = localStorage.jwtToken;\n            setAuthToken(token);\n            // Decode token and get user info and exp\n            const decoded = jwt_decode(token);\n            console.log(decoded);\n            // Set user and isAuthenticated\n            setCurrentUser(decoded);\n            // Check for expired token\n            const currentTime = Date.now() / 1000; // to get in milliseconds\n            if (decoded.exp < currentTime) {\n                console.log(\"true\");\n                logOutUser();\n                window.location.href = \"/login\";\n            }\n        }\n    }, [setCurrentUser, logOutUser]);\n    return (\n        <>\n            <Switch>\n                <Route exact path=\"/\" component={Login} />\n                <PrivateRoute  path=\"/dashboard\" component={Dashboard} />\n                <PrivateRoute path=\"/customers\" component={Customers} />\n          \n                <PrivateRoute  path=\"/orders\" component={Orders} />\n                <PrivateRoute  path=\"/wallet\" component={Transactions} />\n                <Route  path=\"/login\" component={Login} />\n                <PrivateRoute exact path=\"/products\" component={Products} />\n                <Route exact path=\"/passwordLess\" component={PasswordLess} />\n                <PrivateRoute exact path=\"/changePassword\" component={ChangePassword} />\n                <Route exact path=\"/register\" component={Register} />\n                <Route exact path=\"/news\" component={News} />\n                <Route exact path=\"/emailverification\" component={VerifyEmail} />\n                <Route exact path=\"/forgot\" component={ForgotPassword} />\n             \n                <Route component={PageNotFound} />\n            </Switch>\n            <ToastContainer\n                position=\"bottom-left\"\n                autoClose={5000}\n                hideProgressBar={false}\n            />\n        </>\n    );\n}\n\nconst mapDispatchToProps = {\n    logOutUser: logOutUser,\n    setCurrentUser: setCurrentUser,\n};\n\nexport default connect(null, mapDispatchToProps)(App);\n","import React from \"react\";\nimport { render } from \"react-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport createSagaMiddleware from 'redux-saga';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport { logger } from 'redux-logger';\nimport reducer from './redux/reducers';\nimport rootSaga from './redux/sagas';\nimport App from \"./components/App\";\n// import \"bootstrap/dist/css/bootstrap.min.css\";\n// import \"./assets/css/style.css\";\n// import \"./assets/css/responsive.css\";\nconst sagaMiddleware = createSagaMiddleware();\n\nconst store = createStore(\n    reducer,\n    applyMiddleware(sagaMiddleware, logger),\n);\nsagaMiddleware.run(rootSaga);\n\nrender(\n    <Provider store={store}>\n      <Router>\n        <App />\n      </Router>\n      </Provider>,\n    document.getElementById(\"root\")\n  );\n"],"sourceRoot":""}